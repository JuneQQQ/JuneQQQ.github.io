{"title":"SpringMVC","uid":"cd53cdbf97b8f99c953dd3eda45eed25","slug":"SpringMVC","date":"2022-09-30T09:31:34.000Z","updated":"2022-09-30T09:32:50.707Z","comments":true,"path":"api/articles/SpringMVC.json","keywords":null,"cover":[],"content":"<h1 id=\"SpringMVC\"><a href=\"#SpringMVC\" class=\"headerlink\" title=\"SpringMVC\"></a>SpringMVC</h1><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>基于<code>Spring</code>的一个框架，实际上就是<code>Spring</code>的一个模块，是专门做<code>web</code>开发的，理解是<code>Servlet</code>的一个升级。<code>SpringMVC</code>中有一个对象是<code>Servlet</code>：<code>DispatherServlet</code>，负责接受用户的所有请求，用户把请求给了<code>DispatherServlet</code>，之后<code>DispatherServlet</code>把请求转发给我们的<code>Controller</code>对象，最后是<code>Controller</code>对象处理请求。</p>\n<h2 id=\"入门案例\"><a href=\"#入门案例\" class=\"headerlink\" title=\"入门案例\"></a>入门案例</h2><h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--Servlet--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>javax.servlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>javax.servlet-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.0.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>provided<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--SpringMVC--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-webmvc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.6.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"配置-web-xml\"><a href=\"#配置-web-xml\" class=\"headerlink\" title=\"配置 web.xml\"></a>配置 web.xml</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-app</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!--Servlet配置--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>TestServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>com.example.SpringStudy2.controller.TestServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>TestServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/testServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!--配置监听器，用来唯一一次创建Spring容器--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>context-param</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">></span></span>contextConfigLocation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">></span></span>classpath:spring.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>context-param</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>listener</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>listener-class</span><span class=\"token punctuation\">></span></span>org.springframework.web.context.ContextLoaderListener<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>listener-class</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>listener</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!--声明注册SpringMVC核心对象DispatcherServlet\n        为什么要创建它？\n        DispatcherServlet在创建过程中，会同时创建SpringMVC容器对象，\n        读取SpringMVC的配置文件，把这个配置文件中的对象都创建好，当\n        用户发起请求时，就可以直接使用对象了\n    --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>springmvc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>org.springframework.web.servlet.DispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--自定义SpringMVC配置文件位置--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>init-param</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">></span></span>contextConfigLocation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!--SpringMVC配置文件位置--></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">></span></span>classpath:springmvc.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>init-param</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token comment\">&lt;!--在tomcat启动后，创建Servlet对象,>0--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>load-on-startup</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>load-on-startup</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n    \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>springmvc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--有两种值\n            1.使用扩展名方式：*.xxxx,*.do,*.mvc, xxxx是自定义的扩展名\n            2.使用斜杠'/'：它会替代tomcat中的default，导致静态资源不能访问\n        --></span>\n        \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>*.do<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-app</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"配置springmvc-xml\"><a href=\"#配置springmvc-xml\" class=\"headerlink\" title=\"配置springmvc.xml\"></a>配置springmvc.xml</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/context<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!--注解扫描开启,@Controller--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>component-scan</span> <span class=\"token attr-name\">base-package</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.SpringStudy2.controller<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    \n    <span class=\"token comment\">&lt;!--default-servlet-handler和@RequestMapping注解有冲突，需要加入以下标签--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>annotation-driven</span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token comment\">&lt;!--第一种处理静态资源的方式：\n   \t\t需要在springmvc配置文件加入 &lt;mvc:default-servlet-handler>\n   \t\t原理是加入这个标签后，框架会创建控制器对象DefaultServletHttpRequestHandler（类似我们自己创建的MyController）\n  \t\tDefaultServletHttpRequestHandler这个对象可以把接受到的请求转发给tomcat的default这个servlet\n  \t--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>default-servlet-handler</span><span class=\"token punctuation\">/></span></span>\n    \n    <span class=\"token comment\">&lt;!--选一个--></span>\n    \n    <span class=\"token comment\">&lt;!--第二种处理静态资源方式：\n        &lt;mvc:resources/> 加入后框架会创建ResourceHttpRequestHandler这个处理器对象\n        让这个对象处理静态资源的访问，不依赖tomcat服务器\n        mapping：访问静态资源的uri地址，使用通配符**\n        location：静态资源在项目中的目录位置\n        images/**：表示 images/p1.jpg ， images/user/logo.gif , images/order/history/list.png\n    --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>resources</span> <span class=\"token attr-name\">mapping</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/**<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/pic/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>resources</span> <span class=\"token attr-name\">mapping</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/html/**<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/html/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>resources</span> <span class=\"token attr-name\">mapping</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/js/**<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/js/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token comment\">&lt;!--改进版--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>resources</span> <span class=\"token attr-name\">mapping</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/static/**<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/static/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"处理流程\"><a href=\"#处理流程\" class=\"headerlink\" title=\"处理流程\"></a>处理流程</h2><ol>\n<li>客户端发起 some.do 请求</li>\n<li>tomcat(web.xml –&gt; url-pattern 知道 *.do 的请求给DispatcherServlet )</li>\n<li>DispatcherServlet (根据 <code>springmvc.xml</code> 配置知道 some.do –&gt; doSome() )</li>\n<li>DispatcherServlet把 some.do 转发给MyController的 doSome() 方法</li>\n<li>框架执行 doSome() 把得到的 ModelAndView 进行处理 ，转发到 show.jsp</li>\n</ol>\n<p><img src=\"C:\\Users\\June\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210215155112571.png\" alt=\"image-20210215155112571\"></p>\n<h2 id=\"RequestMapping\"><a href=\"#RequestMapping\" class=\"headerlink\" title=\"@RequestMapping\"></a><em>@RequestMapping</em></h2><h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><h4 id=\"method\"><a href=\"#method\" class=\"headerlink\" title=\"method\"></a>method</h4><p>表示客户端请求的方式限制，它的值是<code>RequestMethod</code>类枚举值，如<code>RequestMethod.GET</code>，<code>RequestMethod.POST</code>；不指定则没有限制。</p>\n<h3 id=\"指定模块名称\"><a href=\"#指定模块名称\" class=\"headerlink\" title=\"指定模块名称\"></a>指定模块名称</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--springmvc.xml--></span>\n<span class=\"token comment\">&lt;!--视图解析器（指明资源文件路径）--></span>\n<span class=\"token comment\">&lt;!--\"/WEB-INF\" + \"xxx\" + \".jsp\"--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!--前缀：视图文件的路径--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/WEB-INF/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token comment\">&lt;!--后缀：视图文件扩展名--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>suffix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.jsp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--Controller可以只写xxx部分--></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"定义在类之上\"><a href=\"#定义在类之上\" class=\"headerlink\" title=\"定义在类之上\"></a>定义在类之上</h3><p>代表其方法的公共前缀</p>\n<h2 id=\"处理方法的参数\"><a href=\"#处理方法的参数\" class=\"headerlink\" title=\"处理方法的参数\"></a>处理方法的参数</h2><p>处理器方法可包含以下四类参数，这些参数会在系统调用时由系统自动赋值，即可以直接在方法内部使用。</p>\n<ul>\n<li><em><strong>HttpServletRequest</strong></em></li>\n<li><em><strong>HttpServletResponse</strong></em></li>\n<li><em><strong>HttpSession</strong></em></li>\n<li><strong>请求中所携带的请求参数</strong></li>\n</ul>\n<h3 id=\"逐个接受参数\"><a href=\"#逐个接受参数\" class=\"headerlink\" title=\"逐个接受参数\"></a>逐个接受参数</h3><h4 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h4><p>处理器（控制器）方法形参名和请求中参数名必须一致；</p>\n<h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><ol>\n<li>使用<code>request</code>对象接受请求参数<ul>\n<li>String strName &#x3D; request.getParameter(“name”);</li>\n<li>String strAge &#x3D; request.getParameter(“age”);</li>\n</ul>\n</li>\n<li>SpringMVC框架通过对<code>DispatcherServlet</code>调用<code>MyController</code>的<code>doSome()</code>方法，调用方法时，按名称对应，把接受的参数赋值给形参 doSome( strName , Integer.valueOf(strAge) ) 框架会提供类型转换功能，能把String转为 int , long , float , double 等类型</li>\n</ol>\n<h4 id=\"参数校正\"><a href=\"#参数校正\" class=\"headerlink\" title=\"参数校正\"></a>参数校正</h4><p>@RequestParam(“真正名”) String 形参；解决请求参数名和处理器方法形参名不一样的问题；定义在处理器方法参数之前。</p>\n<ul>\n<li><code>value</code>：请求中的参数名称</li>\n<li><code>required</code>：默认<code>true</code>，表示请求中必须包含此参数</li>\n</ul>\n<h4 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h4><ul>\n<li><p>400的状态码一般是类型转换错误</p>\n</li>\n<li><p>POST请求中文乱码问题</p>\n<ul>\n<li><pre><code class=\"xml\">&lt;!--web.xml--&gt;\n&lt;!--注册声明过滤器，解决POST乱码问题--&gt;\n&lt;filter&gt;\n    &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;\n    &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;\n    &lt;!--设置项目中使用的字符编码--&gt;\n    &lt;init-param&gt;\n        &lt;param-name&gt;encoding&lt;/param-name&gt;\n        &lt;param-value&gt;utf-8&lt;/param-value&gt;\n    &lt;/init-param&gt;\n    &lt;init-param&gt;\n        &lt;!--强制请求对象使用encoding编码--&gt;\n        &lt;param-name&gt;forceRequestEncoding&lt;/param-name&gt;\n        &lt;param-value&gt;true&lt;/param-value&gt;\n    &lt;/init-param&gt;\n    &lt;init-param&gt;\n        &lt;!--强制请求对象使用encoding编码--&gt;\n        &lt;param-name&gt;forceResponseEncoding&lt;/param-name&gt;\n        &lt;param-value&gt;true&lt;/param-value&gt;\n    &lt;/init-param&gt;\n&lt;/filter&gt;\n&lt;filter-mapping&gt;\n    &lt;!--匹配所有请求--&gt;\n    &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;\n    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n&lt;/filter-mapping&gt;\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n\n\n### 对象接受参数\n\n原理是调用其同名set方法\n\n\n\n## 控制器返回值\n\n1. &#96;ModelAndView&#96;：有数据和视图，对视图执行forward\n\n2. &#96;String&#96;：只有视图，对视图执行forward；返回值即转发的路径，注意写法\n\n   - 也可以返回字符串数据，需要加上@ResponseBody注解\n   - 且在@RequestMapping注解中设置属性 produces&#x3D;&quot;text&#x2F;plain;charset&#x3D;utf-8&quot;\n\n3. &#96;void&#96;：空；在处理AJAX时，可以使用void返回值\n\n4. &#96;Object&#96;：例如String，Integer，Map，List，Student等等都是对象，对象有属性，属性就是数据，返回Object表示数据，和视图无关；可以表示相应的数据，响应ajax请求\n\n   - 原理：\n\n   - &#96;&#96;&#96;tex\n     springmvc处理器方法返回Object，可以转为json输出到浏览器，响应ajax的内部原理\n     &lt;mvc:annotation-driven&gt; 注解驱动\n     注解驱动实现的功能是 完成java对象到json，xml，text，二进制等数据格式的转换。\n     &lt;mvc:annotation-driven&gt;加入到springmvc配置文件后，会自动创建HttpMessageConverter接口的七个实现类对象，包括\n     MappingJackson2HttpMessageConverter(使用jackson工具库中的ObjectMapper实现java对象转为json)\n     \n     HttpMessageConverter接口：消息转换器\n     功能定义了java转为json，xml等数据格式的方法。这个接口有很多的实现类。这些实现类完成java对象到json，java对象到xml，java对象到二进制数据的转换\n     \n     下面两个方法是控制器类把结果输出给浏览器时使用的：\n     \n     boolean canWrite(Class&lt;?&gt; var1 , @Nullable MediaType var2);\n     \t用来检查处理器方法的返回值，能不能转为var2表示的数据格式\n     void write(T var1 , @Nullable MediaType var2 , HttpOutputMessage var3);\n     \t把处理器方法的返回值对象，调用jackson中的ObjectMapper转为json字符串\n     \t\n     返回对象框架的处理流程：\n     1.框架会把Student类型，调用框架中的 ArrayList&lt;HttpMessageConverter&gt; 中每个类的 canWrite() 方法，检查那个HttpMessageConverter接口的实现类能处理Student类型的数据--MappingJackson2HttpMessageConverter\n     2.框架会调用实现类的write()，MappingJackson2HttpMessageConverter的write()方法，把李四同学的student对象转为json，调用Jackson的ObjectMapper实现转为json\n     3.框架会调用@ResponseBody把2的结果输出到浏览器，ajax请求完成<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</code></pre>\n</li>\n<li><p>使用步骤</p>\n</li>\n<li><p>&#96;&#96;&#96;tex<br>1.加入json的工具库依赖，springmvc默认使用jackson<br>2.在springmvc配置文件之间加入<a href=\"mvc:annotation-driven\">mvc:annotation-driven</a>注解驱动<br>String json &#x3D; om.writeValueAsString(student);<br>3.在处理器方法的上面加上   @ResponseBody<br>response.setContentType(“application&#x2F;json;charset-utf-8”);<br>PrintWriter pw &#x3D; response.getWriter();<br>pw.println(json);</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n- &#96;&#96;&#96;xml\n  &lt;!--JSON--&gt;\n  &lt;dependency&gt;\n      &lt;groupId&gt;com.fasterxml.jackson.core&lt;&#x2F;groupId&gt;\n      &lt;artifactId&gt;jackson-core&lt;&#x2F;artifactId&gt;\n      &lt;version&gt;2.12.1&lt;&#x2F;version&gt;\n  &lt;&#x2F;dependency&gt;\n  &lt;dependency&gt;\n      &lt;groupId&gt;com.fasterxml.jackson.core&lt;&#x2F;groupId&gt;\n      &lt;artifactId&gt;jackson-databind&lt;&#x2F;artifactId&gt;\n      &lt;version&gt;2.12.1&lt;&#x2F;version&gt;\n  &lt;&#x2F;dependency&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"前端页面路径\"><a href=\"#前端页面路径\" class=\"headerlink\" title=\"前端页面路径\"></a>前端页面路径</h2><p>在<code>jsp</code>，<code>html</code>中使用的地址，都是在前端页面中的地址，都是相对地址。</p>\n<h3 id=\"地址分类\"><a href=\"#地址分类\" class=\"headerlink\" title=\"地址分类\"></a>地址分类</h3><ol>\n<li>绝对地址，带有协议名称的是绝对地址，如<a href=\"http://www.baidu.com/\">http://www.baidu.com</a>  <a href=\"ftp://202.122.23.1/\">ftp://202.122.23.1</a></li>\n<li>相对地址，没有协议开头，例如  user&#x2F;some.do ， &#x2F;user&#x2F;some.do。相对地址不能独立使用，必须有一个参考地址，通过参考地址+相对地址本身才能指定资源</li>\n</ol>\n<h3 id=\"用前置-“-x2F-“-不用？\"><a href=\"#用前置-“-x2F-“-不用？\" class=\"headerlink\" title=\"用前置 “ &#x2F; “ 不用？\"></a>用前置 “ &#x2F; “ 不用？</h3><h4 id=\"不加-“-x2F-“\"><a href=\"#不加-“-x2F-“\" class=\"headerlink\" title=\"不加 “ &#x2F; “\"></a>不加 “ &#x2F; “</h4><p>访问的是：<a href=\"http://localhost:8080/page/index.jsp\">http://localhost:8080/page/index.jsp</a></p>\n<p>路径：<a href=\"http://localhost:8080/page/\">http://localhost:8080/page/</a></p>\n<p>资源：index.jsp</p>\n<p>在index.jsp发起 user&#x2F;some.do 请求，访问地址变为 <a href=\"http://localhost:8080/page/user/some.do%EF%BC%8C%E5%BD%93%E5%9C%B0%E5%9D%80%E6%B2%A1%E6%9C%89%E6%96%9C%E6%9D%A0%E5%BC%80%E5%A4%B4%EF%BC%8C%E4%BE%8B%E5%A6%82\">http://localhost:8080/page/user/some.do，当地址没有斜杠开头，例如</a> user&#x2F;some.do ，当点击链接时，访问地址是当前页面路径加上链接的地址。 </p>\n<p><a href=\"http://localhost:8080/page/\">http://localhost:8080/page/</a>  + user&#x2F;some.do</p>\n<h4 id=\"加-“-x2F-“\"><a href=\"#加-“-x2F-“\" class=\"headerlink\" title=\"加 “ &#x2F; “\"></a>加 “ &#x2F; “</h4><p>访问的是：<a href=\"http://localhost:8080/page/index.jsp\">http://localhost:8080/page/index.jsp</a></p>\n<p>路径：<a href=\"http://localhost:8080/page\">http://localhost:8080/page</a></p>\n<p>资源：index.jsp</p>\n<p>点击 &#x2F;user&#x2F;some.do 访问地址变为 <a href=\"http://localhost:8080/user/some.do\">http://localhost:8080/user/some.do</a></p>\n<p>参考地址是当前服务器地址，也就是  <a href=\"http://localhost:8080/\">http://localhost:8080</a></p>\n<ol>\n<li><p>加入 ${pageContext.request.contextPath} 代替项目虚拟路径写法，例如 &lt;a href&#x3D;” ${pageContext.request.contextPath}&#x2F;user&#x2F;some.do “</p>\n</li>\n<li><p>加入一个base 标签，是html中的标签，表示当前页面中访问地址的基地址。页面中所有没有以 “ &#x2F; “开头的地址，都是以base标签中的地址为参考地址，使用base中的地址 + 写的路径(不带 &#x2F; ) 组成实际访问路径</p>\n<ul>\n<li>&#96;&#96;&#96;jsp<base href=\"${pageContext.request.contextPath }/\" target=\"_blank\" />\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n\n\n\n\n## SSM整合开发\n\nSSM编程，即&#96;SpringMVC&#96; + &#96;Spring&#96;  + &#96;MyBatis&#96; 整合，是当前最为流行的JavaEE开发技术架构。其实SSM整合的实质，仅仅就是将&#96;MyBatis&#96;整合入&#96;Spring&#96;。因为&#96;SpringMVC&#96;原本就是Spring&#96;的一部分&#96;，不用专门整合。SSM整合实现方式分为两种：基于XML、基于注解；\n\nSpringMVC：视图层、界面层，负责接受请求，显示处理结果；\n\nSpring：业务层，管理service，dao，工具类对象的\n\nMyBatis：持久层，负责访问数据库\n\nSSM整合也叫做SSI（IBatis），整合中有容器。\n\n1. 第一个容器叫做&#96;SpringMVC&#96;容器，管理&#96;Controller&#96;控制器对象的。\n2. 第二个容器&#96;Spring&#96;容器，管理&#96;Service&#96;，&#96;Dao&#96;，工具类对象的\n\n我们要做的是把使用对象交给合适的容器创建，管理。把&#96;Controller&#96;还有web开发的相关对象，交给&#96;SpringMVC&#96;容器，这些web用的对象写在SpringMVC配置文件中；service，dao对象定义在&#96;Spring&#96;的配置文件中，让&#96;spring&#96;管理这些对象\n\n&#96;SpringMVC&#96;容器和&#96;Spring&#96;容器是有关系的，关系已经确定好了\n&#96;SpringMVC&#96;容器是&#96;Spring&#96;容器的子容器，类似于Java中的继承。子可以访问父的内容，在子容器中的&#96;Controller&#96;可以访问父容器中的&#96;Service&#96;对象，就可以实现&#96;Controller&#96;使用&#96;Service&#96;对象\n\n实现步骤：\n\n1. 创建数据库\n2. 新建&#96;maven web&#96;项目\n3. 加入依赖\n   - SpringMVC ，Spring，MyBatis三个框架依赖，jackson依赖，mysql驱动，druid连接池，jsp，servlet依赖\n4. 写&#96;web.xml&#96;\n   1. 注册&#96;DispatcherServlet&#96;，目的：\n      1. 创建&#96;SpringMVC&#96;容器对象，才能创建&#96;Controller&#96;类对象\n      2. 创建的是&#96;Servlet&#96;，才能接受用户的请求。\n   2. 注册&#96;Spring&#96;的监听器：&#96;ContextLoaderListener&#96;，目的：创建&#96;Spring&#96;容器对象\n   3. 注册字符集过滤器，解决&#96;POST&#96;请求乱码问题\n5. 写spring , spring , mybatis 配置文件\n   1. springmvc.xml\n   2. spring.xml\n   3. mybatis.xml\n   4. mapper.xml\n   5. properties\n6. 写到吗，dao接口和mapper文件，service和实现类，controller，实体类\n7. 写jsp页面\n\n\n\n### 搭建开发环境\n\n#### applicationContext.xml\n\n&#96;&#96;&#96;xml\n&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n       xmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;\n       xmlns:tx&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx&quot; xmlns:aop&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;aop&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd\n                        http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context.xsd\n                        http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx&#x2F;spring-tx.xsd http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;aop https:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;aop&#x2F;spring-aop.xsd&quot;&gt;\n\n    &lt;!--配置连接数据源--&gt;\n    &lt;context:property-placeholder location&#x3D;&quot;classpath:jdbc.properties&quot;&#x2F;&gt;\n    &lt;bean id&#x3D;&quot;dataSource&quot; class&#x3D;&quot;com.alibaba.druid.pool.DruidDataSource&quot;\n          init-method&#x3D;&quot;init&quot; destroy-method&#x3D;&quot;close&quot;&gt;\n        &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;$&#123;jdbc.url&#125;&quot;&#x2F;&gt;\n        &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;$&#123;jdbc.username&#125;&quot;&#x2F;&gt;\n        &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;$&#123;jdbc.password&#125;&quot;&#x2F;&gt;\n        &lt;property name&#x3D;&quot;maxActive&quot; value&#x3D;&quot;$&#123;jdbc.maxActive&#125;&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n\n\n    &lt;!--SqlSessionFactoryBean创建SqlSessionFactory--&gt;\n    &lt;bean id&#x3D;&quot;sqlSessionFactory&quot; class&#x3D;&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;\n        &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot; &#x2F;&gt;\n        &lt;property name&#x3D;&quot;configLocation&quot; value&#x3D;&quot;classpath:conf&#x2F;mybatis.xml&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n\n    &lt;!--mybatis扫描器，创建dao对象--&gt;\n    &lt;bean class&#x3D;&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;\n        &lt;property name&#x3D;&quot;sqlSessionFactoryBeanName&quot; value&#x3D;&quot;sqlSessionFactory&quot;&#x2F;&gt;\n        &lt;property name&#x3D;&quot;basePackage&quot; value&#x3D;&quot;com.example.dao&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n\n    &lt;!--声明service的注解@Service所在的包名位置--&gt;\n    &lt;context:component-scan base-package&#x3D;&quot;com.example.service&quot;&#x2F;&gt;\n\n    &lt;!--事务配置--&gt;\n&lt;!--    &lt;bean id&#x3D;&quot;studentService&quot; class&#x3D;&quot;com.example.service.StudentServiceImpl&quot;&gt;--&gt;\n&lt;!--        &lt;property name&#x3D;&quot;studentDao&quot; ref&#x3D;&quot;studentDao&quot; &#x2F;&gt;--&gt;\n&lt;!--    &lt;&#x2F;bean&gt;--&gt;\n\n&lt;!--    &lt;bean id&#x3D;&quot;transactionManager&quot; class&#x3D;&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;--&gt;\n&lt;!--        &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot; &#x2F;&gt;--&gt;\n&lt;!--    &lt;&#x2F;bean&gt;--&gt;\n&lt;!--    &lt;tx:advice id&#x3D;&quot;txadvice&quot;&gt;--&gt;\n&lt;!--        &lt;tx:attributes&gt;--&gt;\n&lt;!--            &lt;tx:method name&#x3D;&quot;sale&quot; propagation&#x3D;&quot;REQUIRED&quot; &#x2F;&gt;--&gt;\n&lt;!--        &lt;&#x2F;tx:attributes&gt;--&gt;\n&lt;!--    &lt;&#x2F;tx:advice&gt;--&gt;\n&lt;!--    &lt;aop:config&gt;--&gt;\n&lt;!--        &lt;aop:pointcut id&#x3D;&quot;pt&quot; expression&#x3D;&quot;execution(* com.example.service.xxx.sale(..))&quot;&#x2F;&gt;--&gt;\n&lt;!--        &lt;aop:advisor advice-ref&#x3D;&quot;txadvice&quot; pointcut-ref&#x3D;&quot;pt&quot;&#x2F;&gt;--&gt;\n&lt;!--    &lt;&#x2F;aop:config&gt;--&gt;\n&lt;&#x2F;beans&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ol>\n<h4 id=\"dispatcherServlet-xml\"><a href=\"#dispatcherServlet-xml\" class=\"headerlink\" title=\"dispatcherServlet.xml\"></a>dispatcherServlet.xml</h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/context<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mvc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/mvc<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/context\n        https://www.springframework.org/schema/context/spring-context.xsd\n         http://www.springframework.org/schema/mvc\n         https://www.springframework.org/schema/mvc/spring-mvc.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>component-scan</span> <span class=\"token attr-name\">base-package</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.controller<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>suffix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.jsp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!--ajax,静态资源--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>annotation-driven</span><span class=\"token punctuation\">/></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>resources</span> <span class=\"token attr-name\">mapping</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/static/**<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/static/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"mybatis-xml\"><a href=\"#mybatis-xml\" class=\"headerlink\" title=\"mybatis.xml\"></a>mybatis.xml</h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">configuration</span>\n        <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//mybatis.org//DTD Config 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-config.dtd\"</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--    &lt;settings>--></span>\n<span class=\"token comment\">&lt;!--        &lt;setting name=\"logImpl\" value=\"STDOUT_LOGGING\"/>--></span>\n<span class=\"token comment\">&lt;!--    &lt;/settings>--></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeAliases</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>package</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.domain<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>typeAliases</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mappers</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>package</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.dao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mappers</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"jdbc-properties\"><a href=\"#jdbc-properties\" class=\"headerlink\" title=\"jdbc.properties\"></a>jdbc.properties</h4><pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token key attr-name\">jdbc.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql:///test</span>\n<span class=\"token key attr-name\">jdbc.username</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span>\n<span class=\"token key attr-name\">jdbc.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">666666</span>\n<span class=\"token key attr-name\">jdbc.maxActive</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"mapper-xml\"><a href=\"#mapper-xml\" class=\"headerlink\" title=\"mapper.xml\"></a>mapper.xml</h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">mapper</span>\n        <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.dao.StudentDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectAll<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.domain.Student<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select id,name,age from student order by id desc\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertStudent<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        insert into student(name,age) values(#&#123;name&#125;,#&#123;age&#125;)\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"SpringMVC核心技术\"><a href=\"#SpringMVC核心技术\" class=\"headerlink\" title=\"SpringMVC核心技术\"></a>SpringMVC核心技术</h2><h3 id=\"请求转发和重定向\"><a href=\"#请求转发和重定向\" class=\"headerlink\" title=\"请求转发和重定向\"></a>请求转发和重定向</h3><h4 id=\"转发\"><a href=\"#转发\" class=\"headerlink\" title=\"转发\"></a>转发</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//以下方式是配合视图解析器</span>\nmv<span class=\"token punctuation\">.</span><span class=\"token function\">setViewName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//此方式不受视图解析器限制，主要用于访问视图解析器以外的资源</span>\nmv<span class=\"token punctuation\">.</span><span class=\"token function\">setViewName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"forward:/result.jsp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//之前设置的参数会以url栏参数写到转发路径中</span>\n<span class=\"token comment\">//该方法无法访问/WEB-INF目录下资源</span>\nmv<span class=\"token punctuation\">.</span><span class=\"token function\">setViewName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redirect:/result.jsp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h3><ol>\n<li><p>新建一个自定义异常类MyUserException，再定义它的子类NameException，AgeException</p>\n</li>\n<li><p>在controller抛出NameException，AgeException</p>\n</li>\n<li><p>创建一个普通类，作用全局异常处理类</p>\n<ol>\n<li>在类上面加入@ControllerAdvice</li>\n<li>在类中定义方法，方法的上面加入@ExceptionHandler</li>\n</ol>\n</li>\n<li><p>创建处理异常的视图页面</p>\n</li>\n<li><p>创建springmvc配置文件</p>\n<ol>\n<li><p>组件扫描器，扫描@Controller注解和@ControllerAdvice所在的包名</p>\n<ul>\n<li>&#96;&#96;&#96;xml<br>&lt;context:component-scan base-package&#x3D;”com.example.handler”&#x2F;&gt;<br><a href=\"mvc:annotation-driven/\">mvc:annotation-driven/</a><pre class=\"line-numbers language-none\"><code class=\"language-none\">   \n   2. 声明注解驱动\n\n![image-20210218124329184](C:\\Users\\June\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210218124329184.png)\n\n\n\n### 拦截器\n\n1. 拦截器是springmvc的一种，需要实现&#96;HandlerInterceptor&#96;接口\n2. 拦截器和过滤器类似，功能方向侧重点不同。过滤器是用来过滤请求参数的，设置编码字符集工作；拦截器是拦截用户请求，做请求判断处理的\n3. 拦截器是全局的，可以对多个&#96;Controller&#96;做拦截；\n4. 拦截器常用在：用户登录处理，权限检查，记录日志\n\n#### 使用步骤\n\n1. 实现&#96;HandlerInterceptor&#96;接口\n\n2. 在springmvc配置文件中，声明拦截器\n\n   - &#96;&#96;&#96;xml\n     &lt;mvc:interceptors&gt;\n         &lt;mvc:interceptor&gt;\n             &lt;mvc:mapping path&#x3D;&quot;&#x2F;*.do&quot;&#x2F;&gt;\n             &lt;bean class&#x3D;&quot;com.example.handler.MyInterceptor&quot;&#x2F;&gt;\n         &lt;&#x2F;mvc:interceptor&gt;\n     &lt;&#x2F;mvc:interceptors&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"执行时间\"><a href=\"#执行时间\" class=\"headerlink\" title=\"执行时间\"></a>执行时间</h4><ol>\n<li>在请求处理之前，也就是controller类中的方法执行之前先被拦截；</li>\n<li>在控制器方法执行之后也会执行拦截器；</li>\n<li>在请求处理完成后也会执行拦截器。</li>\n</ol>\n<h4 id=\"拦截器与过滤器的区别\"><a href=\"#拦截器与过滤器的区别\" class=\"headerlink\" title=\"拦截器与过滤器的区别\"></a>拦截器与过滤器的区别</h4><ol>\n<li>过滤器是<code>servlet</code>中的对象，拦截器是框架中的对象</li>\n<li>过滤器实现<code>Filter</code>接口的对象，拦截器是实现<code>HandlerInterceptor</code></li>\n<li>过滤器是用来设置<code>request</code>，<code>response</code>的参数，属性的的，侧重对数据过滤的，拦截器是用来验证请求的，能截断请求。</li>\n<li>过滤器是在拦截器之前先执行的</li>\n<li>过滤器是<code>tomcat</code>服务器创建的对象，拦截器是<code>springmvc</code>容器中创建的对象</li>\n<li>过滤器是一个执行时间点，拦截器有三个执行时间点</li>\n<li>过滤器可以处理<code>jsp</code>，<code>js</code>，<code>html</code>等等，拦截器侧重于对<code>controller</code>的对象，如果请求不能被<code>DispatcherServlet</code>所接收，则不能被拦截器所处理</li>\n<li>拦截器拦截普通类方法执行，过滤器过滤<code>servlet</code>请求响应</li>\n</ol>\n<h2 id=\"SpringMVC执行流程\"><a href=\"#SpringMVC执行流程\" class=\"headerlink\" title=\"SpringMVC执行流程\"></a>SpringMVC执行流程</h2><p><img src=\"C:\\Users\\June\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210218145742902.png\" alt=\"image-20210218145742902\"></p>\n","text":"SpringMVC概述基于Spring的一个框架，实际上就是Spring的一个模块，是专门做web开发的，理解是Servlet的一个升级。SpringMVC中有一个对象是Servlet：DispatherServlet，负责接受用户的所有请求，用户把请求给了DispatherSe...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[],"tags":[{"name":"Java框架","slug":"Java框架","count":2,"path":"api/tags/Java框架.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SpringMVC\"><span class=\"toc-text\">SpringMVC</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">入门案例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">添加依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-web-xml\"><span class=\"toc-text\">配置 web.xml</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEspringmvc-xml\"><span class=\"toc-text\">配置springmvc.xml</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">处理流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#RequestMapping\"><span class=\"toc-text\">@RequestMapping</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">属性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#method\"><span class=\"toc-text\">method</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%87%E5%AE%9A%E6%A8%A1%E5%9D%97%E5%90%8D%E7%A7%B0\"><span class=\"toc-text\">指定模块名称</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E5%9C%A8%E7%B1%BB%E4%B9%8B%E4%B8%8A\"><span class=\"toc-text\">定义在类之上</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95%E7%9A%84%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">处理方法的参数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">逐个接受参数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">要求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0%E6%A0%A1%E6%AD%A3\"><span class=\"toc-text\">参数校正</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F\"><span class=\"toc-text\">注意</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">前端页面路径</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%B0%E5%9D%80%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">地址分类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E5%89%8D%E7%BD%AE-%E2%80%9C-x2F-%E2%80%9C-%E4%B8%8D%E7%94%A8%EF%BC%9F\"><span class=\"toc-text\">用前置 “ &#x2F; “ 不用？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%8A%A0-%E2%80%9C-x2F-%E2%80%9C\"><span class=\"toc-text\">不加 “ &#x2F; “</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A0-%E2%80%9C-x2F-%E2%80%9C\"><span class=\"toc-text\">加 “ &#x2F; “</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#dispatcherServlet-xml\"><span class=\"toc-text\">dispatcherServlet.xml</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mybatis-xml\"><span class=\"toc-text\">mybatis.xml</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#jdbc-properties\"><span class=\"toc-text\">jdbc.properties</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mapper-xml\"><span class=\"toc-text\">mapper.xml</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SpringMVC%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF\"><span class=\"toc-text\">SpringMVC核心技术</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91%E5%92%8C%E9%87%8D%E5%AE%9A%E5%90%91\"><span class=\"toc-text\">请求转发和重定向</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BD%AC%E5%8F%91\"><span class=\"toc-text\">转发</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%AE%9A%E5%90%91\"><span class=\"toc-text\">重定向</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86\"><span class=\"toc-text\">异常处理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%A7%E8%A1%8C%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">执行时间</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8B%A6%E6%88%AA%E5%99%A8%E4%B8%8E%E8%BF%87%E6%BB%A4%E5%99%A8%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">拦截器与过滤器的区别</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SpringMVC%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">SpringMVC执行流程</span></a></li></ol></li></ol>","author":{"name":"JuneQQQ","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/JuneQQQ","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_46925850","juejin":"https://juejin.cn/user/3927934338357197","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/432154182"}}}},"mapped":true,"prev_post":{"title":"Vue基础","uid":"d216cb7f62edb6d66c0218a494244405","slug":"Vue基础","date":"2022-09-30T09:34:43.000Z","updated":"2022-09-30T09:37:40.425Z","comments":true,"path":"api/articles/Vue基础.json","keywords":null,"cover":[],"text":"1. Vue基础1.1 Demo&lt;!-- 准备好一个容器 --&gt; &lt;div id&#x3D;&quot;demo&quot;&gt; &lt;h1&gt;&#123;&#123;name.toUpperCase()&#125;&#125;，&#123;&#123...","link":"","photos":[],"count_time":{"symbolsCount":"83k","symbolsTime":"1:16"},"categories":[],"tags":[{"name":"前端","slug":"前端","count":1,"path":"api/tags/前端.json"},{"name":"框架","slug":"框架","count":1,"path":"api/tags/框架.json"}],"author":{"name":"JuneQQQ","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/JuneQQQ","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_46925850","juejin":"https://juejin.cn/user/3927934338357197","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/432154182"}}}}},"next_post":{"title":"SpringBoot2","uid":"b4181dd5d95268a72dc772ce74f718cd","slug":"SpringBoot2","date":"2022-09-30T09:31:29.000Z","updated":"2022-09-30T09:32:29.213Z","comments":true,"path":"api/articles/SpringBoot2.json","keywords":null,"cover":[],"text":"入门案例几个注解@Cofiguration@Configuration(proxyBeanMethods=false) // Lite模式 @Configuration(proxyBeanMethods=true) // Full模式 严格保证Bean单实例，每次属性注入都要检查...","link":"","photos":[],"count_time":{"symbolsCount":"55k","symbolsTime":"50 mins."},"categories":[],"tags":[{"name":"Java框架","slug":"Java框架","count":2,"path":"api/tags/Java框架.json"}],"author":{"name":"JuneQQQ","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/JuneQQQ","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_46925850","juejin":"https://juejin.cn/user/3927934338357197","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/432154182"}}}}}}