{"title":"MySQL基础","uid":"4a207b7e885fdbcca8129599135e5f2e","slug":"MySQL基础","date":"2022-09-30T09:27:41.000Z","updated":"2022-09-30T09:28:44.872Z","comments":true,"path":"api/articles/MySQL基础.json","keywords":null,"cover":[],"content":"<p><a href=\"https://www.cnblogs.com/rickiyang/p/13559507.html\">MySQL 索引结构 - rickiyang - 博客园 (cnblogs.com)</a></p>\n<h1 id=\"MySQL基础\"><a href=\"#MySQL基础\" class=\"headerlink\" title=\"MySQL基础\"></a>MySQL基础</h1><h3 id=\"1-基础语法\"><a href=\"#1-基础语法\" class=\"headerlink\" title=\"1.基础语法\"></a>1.基础语法</h3><ul>\n<li><strong>Null 相关</strong></li>\n</ul>\n<p>使用 is null，例如查询哪些员工津贴为null：</p>\n<p><code>select empno,ename,sal</code> from emp where comm is null</p>\n<ul>\n<li><strong>IS NULL &amp; &lt;&#x3D;&gt;</strong></li>\n</ul>\n<p>前者仅可以判断NULL值，后者既可以判断NULL，又可以判断普通的数值</p>\n<h3 id=\"2-条件语句\"><a href=\"#2-条件语句\" class=\"headerlink\" title=\"2.条件语句\"></a>2.条件语句</h3><h4 id=\"and-和-or\"><a href=\"#and-和-or\" class=\"headerlink\" title=\"and 和 or\"></a>and 和 or</h4><p>and 优先级比 or 高</p>\n<h4 id=\"in\"><a href=\"#in\" class=\"headerlink\" title=\"in\"></a>in</h4><ul>\n<li>语法：<ul>\n<li><code>select xxx from xxx where n in(&#39;a&#39;,&#39;b&#39;)</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"like（模糊查询）\"><a href=\"#like（模糊查询）\" class=\"headerlink\" title=\"like（模糊查询）\"></a>like（模糊查询）</h4><ul>\n<li>%：匹配任意个字符</li>\n<li>_：匹配一个字符</li>\n<li>[  ] ：表示括号内所列字符中的一个（类似正则表达式）。指定一个字符、字符串或范围，要求所匹配对象为它们中的任一个。<ul>\n<li>如 [  ] 内有一系列字符（01234、abcde之类的）则可略写为“0-4”、“a-e”</li>\n</ul>\n</li>\n<li>[^ ] ：表示不在括号所列之内的单个字符。其取值和 [ ] 相同，但它要求所匹配对象为指定字符以外的任一个字符。</li>\n</ul>\n<p>注意：</p>\n<ul>\n<li>涉及到% _ 可以用 \\ 转义</li>\n<li>like 不匹配 null</li>\n</ul>\n<h3 id=\"3-排序\"><a href=\"#3-排序\" class=\"headerlink\" title=\"3.排序\"></a>3.排序</h3><ul>\n<li>默认升序 <code>ASC</code>  可以指定降序 <code>DESC</code></li>\n<li>根据两个或多个字段排序<ul>\n<li>有先后之分，先写的优先排，只有其值相同，才会用到后面的排序</li>\n</ul>\n</li>\n<li>order by 后面可以跟数字，表示根据第几列排序</li>\n<li>以上语句的执行顺序<ul>\n<li>from -&gt; where -&gt; select -&gt; order by（排序总是在最后）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-单行处理函数\"><a href=\"#4-单行处理函数\" class=\"headerlink\" title=\"4.单行处理函数\"></a>4.单行处理函数</h3><h4 id=\"字符串处理函数\"><a href=\"#字符串处理函数\" class=\"headerlink\" title=\"字符串处理函数\"></a>字符串处理函数</h4><ul>\n<li><p>Lower&#x2F;Upper：大小写</p>\n</li>\n<li><p><strong>concat</strong>：拼接字符串</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> concat<span class=\"token punctuation\">(</span>last_name<span class=\"token punctuation\">,</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">,</span>first_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> employees<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p><strong>substr</strong>：取子串（substr(被截取的字符串, 起始下标, 截取的长度)）</p>\n<ul>\n<li>起始下标从 1开始 ( field, [from, to] ) 包括两端取值</li>\n</ul>\n</li>\n<li><p>instr：字符串出现位置 ( [ source_str, example_str ] )，从1开始计算</p>\n</li>\n<li><p>length( )：长度</p>\n</li>\n<li><p>trim：去<strong>前后</strong>空格</p>\n<ul>\n<li>trim( ‘a’ from ‘aaadsdsaaaa’ ) 去除前后的 ‘a’</li>\n</ul>\n</li>\n<li><p>lpad( source_str, length, char )：用指定字符左填充指定长度</p>\n</li>\n<li><p>rpad( source_str, length, char )：用指定字符右填充指定长度</p>\n</li>\n<li><p>replace( source, old, new )：字符串替换</p>\n</li>\n<li><p><strong>instr</strong>(source, target)：查找targer字符串第一次在source出现的位置（从1开始，不存在返回0）</p>\n</li>\n<li><p>locate(target, source)：查找targer字符串在source出现的位置（从1开始，不存在返回0）</p>\n</li>\n<li><p>position( targer IN source )：查找targer字符串第一次在source出现的位置（从1开始，不存在返回0）</p>\n</li>\n<li><p>substring_index(source, char ,n)：source 字符串截取函数，注意index不能为0，正数代表截取第n个出现的char之前的所有字符串，负数代表截取倒数第|n|个出现的char之后的所有字符串</p>\n<ul>\n<li><code>select device_id,substring_index(blog_url,&#39;/&#39;,-1) user_name from user_submit</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"数学函数\"><a href=\"#数学函数\" class=\"headerlink\" title=\"数学函数\"></a>数学函数</h4><ul>\n<li><p>cell(  )：向上取整，返回&gt;&#x3D;该参数的最小整数</p>\n</li>\n<li><p>floor(  )：向下取整，返回&lt;&#x3D;该参数的最小整数</p>\n</li>\n<li><p>trancate( num [,n ] )：数字截断，可以指定小数点后位数n</p>\n</li>\n<li><p>mod( )：取余 &#x3D; a-a&#x2F;b*b</p>\n</li>\n<li><p>round( )：四舍五入 ( field [,保留小数位数] )  </p>\n<ul>\n<li>负数代表向整数位舍入</li>\n</ul>\n</li>\n<li><p>format：设置千分位</p>\n</li>\n<li><p>rand：生成随机数</p>\n<ul>\n<li>一百以内随机整数：<code>round(rand()*100, 0)</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"日期函数\"><a href=\"#日期函数\" class=\"headerlink\" title=\"日期函数\"></a>日期函数</h4><ul>\n<li>now( )：获取当前时间</li>\n<li>curdate( )：返回当前年月日</li>\n<li>curtime( )：返回当前时分秒</li>\n<li>year( time )：截断取年</li>\n<li>month( time )：截断取月</li>\n<li>str_to_date：字符串转日期，–&gt; 数据库识别<ul>\n<li><code>select * from emp where hiredate = STR_TO_DATE(&#39;4-3 1992&#39;,&#39;%c-%d %Y&#39;);</code></li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">格式符</th>\n<th align=\"center\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">%Y</td>\n<td align=\"center\">四位年份</td>\n</tr>\n<tr>\n<td align=\"center\">%y</td>\n<td align=\"center\">2位的年份</td>\n</tr>\n<tr>\n<td align=\"center\">%m</td>\n<td align=\"center\">月份(01,02…11,12)</td>\n</tr>\n<tr>\n<td align=\"center\">%c</td>\n<td align=\"center\">月份(1,2,…11,12)</td>\n</tr>\n<tr>\n<td align=\"center\">%d</td>\n<td align=\"center\">日(01,02,…)</td>\n</tr>\n<tr>\n<td align=\"center\">%H</td>\n<td align=\"center\">小时（24小时）</td>\n</tr>\n<tr>\n<td align=\"center\">%h</td>\n<td align=\"center\">小时（12小时）</td>\n</tr>\n<tr>\n<td align=\"center\">%i</td>\n<td align=\"center\">分钟（00，01…59）</td>\n</tr>\n<tr>\n<td align=\"center\">%s</td>\n<td align=\"center\">秒（00，01…59）</td>\n</tr>\n</tbody></table>\n<ul>\n<li>date_format：数据库日期， –&gt; 期望格式<ul>\n<li><code>select DATE_FORMAT(now(),&#39;%y-%m-%d&#39;);</code></li>\n</ul>\n</li>\n<li>timestampdiff( unit, start_time, end_time )：计算时间间隔函数</li>\n</ul>\n<h4 id=\"其它函数\"><a href=\"#其它函数\" class=\"headerlink\" title=\"其它函数\"></a>其它函数</h4><ul>\n<li><strong>ifnull</strong>( field, replace )：将 null 转换</li>\n<li>version( )</li>\n<li>database( )</li>\n<li>user( )</li>\n</ul>\n<h3 id=\"5-多行处理函数\"><a href=\"#5-多行处理函数\" class=\"headerlink\" title=\"5.多行处理函数\"></a>5.多行处理函数</h3><p>若不配合分组字段使用，则默认将整张表当做一组；</p>\n<p>分组函数自动忽略 null</p>\n<ul>\n<li><p>count：计数</p>\n</li>\n<li><p>sum：求和</p>\n</li>\n<li><p>avg：平均值</p>\n</li>\n<li><p>max&#x2F;min：最值</p>\n</li>\n<li><p><strong>count ( 具体字段 )：表示统计该字段下所有不为NULL的元素总数</strong></p>\n</li>\n<li><p><strong>count ( * )：统计表当中的总行数（只要有一行数据则count++）</strong></p>\n</li>\n<li><p><strong>count( n )：将所有行置1，统计行数</strong></p>\n</li>\n<li><p><strong>有主键 count( 主键字段 )最快</strong></p>\n</li>\n<li><p><strong>没主键 count( 1 )最快</strong></p>\n</li>\n<li><p><strong>对于以上两种情况，这种情况更优先：</strong></p>\n<ul>\n<li><strong>表中只有一个字段，count( * )最快</strong></li>\n</ul>\n</li>\n<li><p><strong>MyISAM存储引擎下，COUNT(*)效率最高</strong></p>\n</li>\n</ul>\n<p>详细对比：<a href=\"https://www.cnblogs.com/nov5026/p/12966889.html\">https://www.cnblogs.com/nov5026/p/12966889.html</a></p>\n<h3 id=\"6-常用SQL技巧\"><a href=\"#6-常用SQL技巧\" class=\"headerlink\" title=\"6.常用SQL技巧\"></a>6.常用SQL技巧</h3><h4 id=\"SQL执行顺序\"><a href=\"#SQL执行顺序\" class=\"headerlink\" title=\"SQL执行顺序\"></a>SQL执行顺序</h4><p><strong>编写顺序</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span>\n\t\t查询字段\n<span class=\"token keyword\">from</span>\n \t\t表名\n<span class=\"token keyword\">join</span>\n\t\t表名 <span class=\"token keyword\">on</span> 条件\n<span class=\"token keyword\">where</span>\n\t\t条件\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span>\n\t\t字段\n<span class=\"token keyword\">having</span>\n\t\t条件\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span>\n\t\t字段\n<span class=\"token keyword\">limit</span>\n\t\t参数<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>执行顺序</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">from</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">on</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">join</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">where</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">having</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">limit</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h4 id=\"模糊查询-正则表达式\"><a href=\"#模糊查询-正则表达式\" class=\"headerlink\" title=\"模糊查询 - 正则表达式\"></a>模糊查询 - 正则表达式</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tableName <span class=\"token keyword\">where</span> name <span class=\"token operator\">regexp</span> 表达式<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<img src=\"http://markdown-pic-june.oss-cn-beijing.aliyuncs.com/uPic/image-20211113154934697.png\" alt=\"image-20211113154934697\" style=\"zoom:50%;\" />\n\n\n\n\n\n<h3 id=\"7-分组查询\"><a href=\"#7-分组查询\" class=\"headerlink\" title=\"7.分组查询\"></a>7.分组查询</h3><p><strong>找出每个部门，不同工作岗位的最高薪资</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tdeptno<span class=\"token punctuation\">,</span>\n\tjob<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\tdeptno<span class=\"token punctuation\">,</span>\n\tjob<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>找出每个部门最高薪资，要求显示最高薪资大于3000的</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tdeptno<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> maxsal \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\tdeptno \n<span class=\"token keyword\">HAVING</span>\n\tmaxsal <span class=\"token operator\">></span> <span class=\"token number\">3000</span>\n\t\n<span class=\"token comment\">######↓改进↓######</span>\n\n<span class=\"token keyword\">SELECT</span>\n\tdeptno<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">WHERE</span>\n\tsal <span class=\"token operator\">></span> <span class=\"token number\">3000</span> \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\tdeptno<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>找出每个部门平均薪资，要求显示平均薪资高于2500的</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tdeptno<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\tdeptno \n<span class=\"token keyword\">HAVING</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token number\">2500</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"8-distinct-关键字\"><a href=\"#8-distinct-关键字\" class=\"headerlink\" title=\"8.distinct 关键字\"></a>8.distinct 关键字</h3><p>只能用在所有字段最前方</p>\n<p><strong>统计所有工作岗位的数量</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> job<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"9-连接查询\"><a href=\"#9-连接查询\" class=\"headerlink\" title=\"9.连接查询\"></a>9.连接查询</h3><h4 id=\"内连接\"><a href=\"#内连接\" class=\"headerlink\" title=\"内连接\"></a>内连接</h4><h5 id=\"等值连接\"><a href=\"#等值连接\" class=\"headerlink\" title=\"等值连接\"></a>等值连接</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>dname \n<span class=\"token keyword\">FROM</span>\n\temp e  <span class=\"token comment\"># inner 省略</span>\n\t<span class=\"token keyword\">JOIN</span> dept d <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>deptno<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"非等值连接\"><a href=\"#非等值连接\" class=\"headerlink\" title=\"非等值连接\"></a>非等值连接</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\te<span class=\"token punctuation\">.</span>sal<span class=\"token punctuation\">,</span>\n\ts<span class=\"token punctuation\">.</span>grade \n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> SALGRADE s <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">BETWEEN</span> s<span class=\"token punctuation\">.</span>LOSAL \n\t<span class=\"token operator\">AND</span> s<span class=\"token punctuation\">.</span>HISAL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"自连接\"><a href=\"#自连接\" class=\"headerlink\" title=\"自连接\"></a>自连接</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename emp<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>ename mgr \n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> emp d <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>mgr <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>empno<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"外连接\"><a href=\"#外连接\" class=\"headerlink\" title=\"外连接\"></a>外连接</h4><h5 id=\"左外连接-x2F-右外连接\"><a href=\"#左外连接-x2F-右外连接\" class=\"headerlink\" title=\"左外连接&#x2F;右外连接\"></a>左外连接&#x2F;右外连接</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename emp<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>ename mgr \n<span class=\"token keyword\">FROM</span>\n\temp e   <span class=\"token comment\"># 省略 outer -> left outer join</span>\n\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> emp d <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>mgr <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>empno<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"全外连接\"><a href=\"#全外连接\" class=\"headerlink\" title=\"全外连接\"></a>全外连接</h5><p>MySQL不支持，全外连接 &#x3D; 内连接的结果 + 表1中有但表2中没有的 + 表2中有但表1中没有的</p>\n<h4 id=\"交叉连接\"><a href=\"#交叉连接\" class=\"headerlink\" title=\"交叉连接\"></a>交叉连接</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 笛卡尔积的体现</span>\n<span class=\"token keyword\">select</span> a<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> beauty b <span class=\"token keyword\">cross</span> <span class=\"token keyword\">join</span> boys a <span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"10-子查询\"><a href=\"#10-子查询\" class=\"headerlink\" title=\"10.子查询\"></a>10.子查询</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 放在 where 或者 having 后面 或 from后面 或 select 后面（单行单列）</span>\n<span class=\"token keyword\">select</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">from</span> \n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">where</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>例：找出每个工作岗位的平均工资的薪资等级</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\t<span class=\"token operator\">*</span> \n<span class=\"token keyword\">FROM</span>\n\tSALGRADE s\n\t<span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> avgsal<span class=\"token punctuation\">,</span> job <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> job <span class=\"token punctuation\">)</span> t <span class=\"token keyword\">ON</span> t<span class=\"token punctuation\">.</span>avgsal <span class=\"token operator\">BETWEEN</span> s<span class=\"token punctuation\">.</span>LOSAL \n\t<span class=\"token operator\">AND</span> s<span class=\"token punctuation\">.</span>HISAL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>例：找出每个员工的部门名称，要求显示员工名、部门名</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> e<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> d<span class=\"token punctuation\">.</span>dname <span class=\"token keyword\">FROM</span> dept d <span class=\"token keyword\">WHERE</span> e<span class=\"token punctuation\">.</span>DEPTNO <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token punctuation\">)</span> dname \n<span class=\"token keyword\">FROM</span>\n\temp e<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>例：查询每个部门的员工个数</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 子查询使用在 select 之后</span>\n<span class=\"token keyword\">SELECT</span> d<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">FROM</span> employees e\n  <span class=\"token keyword\">WHERE</span> e<span class=\"token punctuation\">.</span>department_id <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>department_id\n<span class=\"token punctuation\">)</span> 个数\n<span class=\"token keyword\">FROM</span> departments d<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>例：查询所有员工的部门名</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 子查询使用在 EXISTS 之后</span>\n<span class=\"token keyword\">SELECT</span> department_name\n<span class=\"token keyword\">FROM</span> departments d\n<span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> \n  <span class=\"token keyword\">FROM</span> employees e \n  <span class=\"token keyword\">WHERE</span> d<span class=\"token punctuation\">.</span>department_id <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>department_id\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h4 id=\"多行子查询\"><a href=\"#多行子查询\" class=\"headerlink\" title=\"多行子查询\"></a>多行子查询</h4><table>\n<thead>\n<tr>\n<th align=\"center\">操作符</th>\n<th align=\"center\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">IN&#x2F;NOT IN</td>\n<td align=\"center\">等于列表中任意一个</td>\n</tr>\n<tr>\n<td align=\"center\">ANY | SOME</td>\n<td align=\"center\">和子查询返回的<strong>某一个</strong>值比较 min</td>\n</tr>\n<tr>\n<td align=\"center\">ALL</td>\n<td align=\"center\">和子查询返回的<strong>所有值</strong>比较 max</td>\n</tr>\n</tbody></table>\n<p>NOT IN &#x3D;&gt; &lt;&gt;ALL</p>\n<p>IN &#x3D;&gt; &#x3D;ANY</p>\n<h4 id=\"UNION\"><a href=\"#UNION\" class=\"headerlink\" title=\"UNION\"></a>UNION</h4><p>例：查询工作岗位是MANAGER和SALESMAN的员工</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employees <span class=\"token keyword\">where</span> email 条件<span class=\"token number\">1</span>\n<span class=\"token keyword\">union</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employees <span class=\"token keyword\">where</span> email 条件<span class=\"token number\">2</span>\n<span class=\"token comment\">###### UNION效率更高 ######</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>联合查询的多条查询语句列数必须一致</li>\n<li>列对应关系与select后的字段顺序有关</li>\n<li>union 默认去重，union all 取消去重</li>\n</ul>\n<h4 id=\"EXISTS\"><a href=\"#EXISTS\" class=\"headerlink\" title=\"EXISTS\"></a>EXISTS</h4><p>exists ( 子查询 ) 返回的是一个boolean值，有或没有</p>\n<h3 id=\"11-Limit-使用\"><a href=\"#11-Limit-使用\" class=\"headerlink\" title=\"11.Limit 使用\"></a>11.Limit 使用</h3><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">SELECT * FROM 表名 limit 6,5;\n结果：检索记录第7行至11行记录，共取出5条记录。\n\nSELECT * FROM 表名 limit 6,-1;\n结果：检索取出第7行至以后的所有数据。\n\nSELECT * FROM 表名 limit 6;\n结果：检索取出前6条记录行。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>偏移量offset较小的时候，直接使用limit较优</p>\n</li>\n<li><p>偏移量offset越大，直接使用子查询越优。</p>\n</li>\n</ul>\n<h3 id=\"12-表相关操作\"><a href=\"#12-表相关操作\" class=\"headerlink\" title=\"12.表相关操作\"></a>12.表相关操作</h3><h4 id=\"创建表（DDL）\"><a href=\"#创建表（DDL）\" class=\"headerlink\" title=\"创建表（DDL）\"></a>创建表（DDL）</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名称\n<span class=\"token punctuation\">(</span>\n    列名称<span class=\"token number\">1</span> 数据类型<span class=\"token punctuation\">,</span>\n    列名称<span class=\"token number\">2</span> 数据类型<span class=\"token punctuation\">,</span>\n    列名称<span class=\"token number\">3</span> 数据类型<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span><span class=\"token keyword\">default</span> <span class=\"token keyword\">character</span> <span class=\"token keyword\">set</span> <span class=\"token operator\">=</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"复制建表\"><a href=\"#复制建表\" class=\"headerlink\" title=\"复制建表\"></a>复制建表</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 复制表结构 + 数据</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tableName1  <span class=\"token keyword\">as</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tableName2\n\n<span class=\"token comment\"># 仅复制表结构</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> newTable <span class=\"token operator\">like</span> oldTable\n\n<span class=\"token comment\"># 选择字段复制结构</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">select</span> filed1<span class=\"token punctuation\">,</span>filed2 <span class=\"token keyword\">from</span> tableName1 <span class=\"token keyword\">where</span> o<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#SQL Server</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">into</span> newTable <span class=\"token keyword\">from</span> oldTable<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h5 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h5><p>主要包括以下五大类：</p>\n<p><strong>整数类型</strong>：BIT、BOOL、TINY INT、SMALL INT、MEDIUM INT、 INT、 BIG INT</p>\n<p><strong>浮点数类型</strong>：FLOAT、DOUBLE、DECIMAL</p>\n<p><strong>字符串类型</strong>：**CHAR(0<del>255,fixed)、VARCHAR(0</del>65535,variable)**、TINY TEXT、TEXT、MEDIUM TEXT、LONGTEXT、TINY BLOB、BLOB、MEDIUM BLOB、LONG BLOB</p>\n<p><strong>日期类型</strong>：Date、DateTime、TimeStamp、Time、Year</p>\n<p><strong>其他数据类型</strong>：BINARY、VARBINARY、ENUM、SET、Geometry、Point、MultiPoint、LineString、MultiLineString、Polygon、GeometryCollection等</p>\n<h5 id=\"约束（-）\"><a href=\"#约束（-）\" class=\"headerlink\" title=\"约束（*********）\"></a>约束（*********）</h5><ul>\n<li>非空约束：not null（只能加在列上）</li>\n<li>唯一性约束：unique<ul>\n<li>修饰的字段不能重复，但可以重复为NULL</li>\n<li>表级约束：<code>[constraint key_name]unique(field_1,field_2...) </code></li>\n</ul>\n</li>\n<li>主键约束：primary key（简称PK）<ul>\n<li>auto_increment 主键自增</li>\n<li>选取主键的一个基本原则是：<strong>不使用任何业务相关的字段作为主键</strong>。</li>\n<li>表级约束：<code>[constraint key_name]primary key(field_name) </code></li>\n</ul>\n</li>\n<li>外键约束：foreign key（简称FK）<ul>\n<li>表级约束：<code>[constraint key_name] foreign key(field_1) references tableName(field_2)</code></li>\n</ul>\n</li>\n<li>检查约束：check（mysql5.6不支持但不会报错，8.0支持；oracle支持）</li>\n<li>列级约束：<code>字段名 类型 check(条件)</code></li>\n<li>默认约束：default<ul>\n<li>列级约束：<code>字段名 类型 default 值</code></li>\n</ul>\n</li>\n<li><strong>unique &amp;&amp; not null &#x3D; primary key  （MySQL）</strong></li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>修改表的约束</p></blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 除外键</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">modify</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">column</span><span class=\"token punctuation\">]</span> columnName typeName constraintName\n\n<span class=\"token comment\"># 外键</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">add</span> <span class=\"token keyword\">constraint</span> keyName <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span>columnName<span class=\"token punctuation\">)</span> <span class=\"token keyword\">references</span> tableName<span class=\"token punctuation\">(</span>columnName<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>删除表的约束</p></blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 删除非空约束</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">modify</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">column</span><span class=\"token punctuation\">]</span> columnName typeName <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 删除默认约束</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">modify</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">column</span><span class=\"token punctuation\">]</span> columnName typeName<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 删除唯一约束</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">drop</span> <span class=\"token keyword\">index</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 删除外键约束，keyName默认为列名</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">drop</span> <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span> keyName<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"修改表（DDL）\"><a href=\"#修改表（DDL）\" class=\"headerlink\" title=\"修改表（DDL）\"></a>修改表（DDL）</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 修改列名/类型</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tableName change <span class=\"token punctuation\">[</span><span class=\"token keyword\">column</span><span class=\"token punctuation\">]</span> oldName newName <span class=\"token keyword\">type</span>\n<span class=\"token comment\"># 修改类型</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">modify</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">column</span><span class=\"token punctuation\">]</span> columnName <span class=\"token keyword\">type</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 添加新列</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">add</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">column</span><span class=\"token punctuation\">]</span> columnName <span class=\"token keyword\">type</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 删除列</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> tableName <span class=\"token keyword\">drop</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">column</span><span class=\"token punctuation\">]</span> columnName<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 修改表名</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> oldName <span class=\"token keyword\">rename</span> <span class=\"token keyword\">to</span> newName<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"删除表（DDL）\"><a href=\"#删除表（DDL）\" class=\"headerlink\" title=\"删除表（DDL）\"></a>删除表（DDL）</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 删除支持回滚，但效率低</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> tableName\n<span class=\"token comment\"># 删除不支持回滚，但效率高</span>\n<span class=\"token keyword\">truncate</span> <span class=\"token keyword\">table</span> tableName<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"插入（DML）\"><a href=\"#插入（DML）\" class=\"headerlink\" title=\"插入（DML）\"></a>插入（DML）</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tableName<span class=\"token punctuation\">(</span>field_1<span class=\"token punctuation\">,</span>field_2<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span>v2<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 一一对应，可以不全写 field</span>\n<span class=\"token comment\"># 另外一种简写方法，需要全写字段,可以同时插入多条</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tableName <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>AllFieldValue<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 另外一种写法</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tableName <span class=\"token keyword\">set</span> field1 <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">,</span>field2 <span class=\"token operator\">=</span> v2 <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>插入日期：</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># varchar -> date</span>\n<span class=\"token comment\"># %Y 年</span>\n<span class=\"token comment\"># %m 月</span>\n<span class=\"token comment\"># %d 日</span>\n<span class=\"token comment\"># %h 时</span>\n<span class=\"token comment\"># %i 分</span>\n<span class=\"token comment\"># %s 秒</span>\nstr_to_date<span class=\"token punctuation\">(</span><span class=\"token string\">'01-10-1990'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%d-%m-%Y'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 如果字符串正好是 1990-10-01 这种格式，可以省略这个函数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>获取日期：</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">date_fromat<span class=\"token punctuation\">(</span>dateField<span class=\"token punctuation\">,</span> <span class=\"token string\">'fromat'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 例子 ↓</span>\n<span class=\"token keyword\">select</span> id<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>date_format<span class=\"token punctuation\">(</span>birth<span class=\"token punctuation\">,</span><span class=\"token string\">'%m/%d/%Y'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> birth <span class=\"token keyword\">from</span> t_user<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>MySQL中如何获取当前时间？</strong></p>\n<p>可以通过 <strong>now()</strong> 函数，获取类型是 datetime 类型的</p>\n<h4 id=\"修改（DML）\"><a href=\"#修改（DML）\" class=\"headerlink\" title=\"修改（DML）\"></a>修改（DML）</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">update</span> tableName <span class=\"token keyword\">set</span> field1 <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> field <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token keyword\">where</span> 条件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h4 id=\"删除（DML）\"><a href=\"#删除（DML）\" class=\"headerlink\" title=\"删除（DML）\"></a>删除（DML）</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> tableName <span class=\"token keyword\">where</span> 条件\n<span class=\"token comment\"># 没有条件，会删除表内全部数据</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"13-事务\"><a href=\"#13-事务\" class=\"headerlink\" title=\"13.事务\"></a>13.事务</h3><p>只有DML（增删改）操作才会跟事务有关；</p>\n<p>注意：MySQL事务默认值自动提交</p>\n<h4 id=\"事务四个特性\"><a href=\"#事务四个特性\" class=\"headerlink\" title=\"事务四个特性\"></a>事务四个特性</h4><ul>\n<li><strong>原子性（Atomicity）</strong><ul>\n<li>原子性是指事务都是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。</li>\n<li>能够在错误时中止事务，丢弃该事务进行的所有写入变更的能力。</li>\n</ul>\n</li>\n<li><strong>一致性（Consistency）</strong><ul>\n<li>一致性是指在事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。这是说数据库事务不能破坏关系数据的完整性以及业务逻辑上的一致性。</li>\n</ul>\n</li>\n<li><strong>隔离性（Isolation）</strong><ul>\n<li>隔离性是指一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能相互干扰。</li>\n</ul>\n</li>\n<li><strong>持久性（Durability）</strong><ul>\n<li>持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"数据库隔离级别-amp-问题\"><a href=\"#数据库隔离级别-amp-问题\" class=\"headerlink\" title=\"数据库隔离级别&amp;问题\"></a>数据库隔离级别&amp;问题</h4><p><strong>问题</strong></p>\n<ul>\n<li><strong>脏读</strong>：对于两个事务T1，T2，T1读取了已经被T2更新但<strong>还没有被提交</strong>的字段，之后，若T2回滚，T1读取的内容就是临时且无效的</li>\n<li><strong>不可重复读</strong>：对于两个事务T1，T2，T1读取了一个字段，然后T2<strong>更新并提交</strong>了该字段，之后，T1再次读取同一个字段，值就不同了</li>\n<li><strong>幻读（虚读）</strong>：对于两个事务T1，T2，T1从一个表中读取了一个字段，然后T2在该表中<strong>插入</strong>了一些新的行，之后，如果T1再次读取同一个表，就会多出几行（<strong>这个只会在增删改时会体现出来！</strong>）</li>\n</ul>\n<p><strong>隔离级别</strong></p>\n<ul>\n<li><strong>读未提交（read uncommitted）</strong><ul>\n<li>没有提交就可以读到</li>\n</ul>\n</li>\n<li><strong>读已提交（read committed）</strong><ul>\n<li>存在<strong>不可重复读、幻读</strong>，解决<strong>脏读</strong></li>\n<li>提交后才可以读到</li>\n</ul>\n</li>\n<li><strong>可重复读（repeatable read）</strong><ul>\n<li>解决了<strong>不可重复读、脏读</strong>，存在<strong>幻读</strong></li>\n<li>提交后也读不到</li>\n<li>MySQL默认隔离级别</li>\n</ul>\n</li>\n<li><strong>序列化（serializable）</strong><ul>\n<li>事务排队，不能并发，效率低，解决了所有问题</li>\n</ul>\n</li>\n</ul>\n<p><strong>相关命令</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> @<span class=\"token variable\">@transaction_isolation</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 查看隔离级别,MySQL80</span>\n<span class=\"token keyword\">select</span> @<span class=\"token variable\">@tx_isolation</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 查看隔离级别,MySQL56</span>\n\n<span class=\"token keyword\">set</span> <span class=\"token keyword\">global</span> <span class=\"token keyword\">transaction</span> <span class=\"token keyword\">isolation</span> <span class=\"token keyword\">level</span> <span class=\"token keyword\">read</span> <span class=\"token keyword\">uncommitted</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 设置事务隔离级别</span>\n\n<span class=\"token keyword\">select</span>  @<span class=\"token variable\">@global.autocommit</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">set</span>  @<span class=\"token variable\">@global.autocommit</span>  <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 关闭自动提交</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"14-视图\"><a href=\"#14-视图\" class=\"headerlink\" title=\"14.视图\"></a>14.视图</h3><ul>\n<li>重用SQL语句</li>\n<li>简化复杂SQL操作，封装细节</li>\n<li>保护数据，提高安全性</li>\n</ul>\n<p><strong>视图能不能更新、删除、添加？</strong></p>\n<p>如果视图的每一行是与物理表一一对应的，则可以，否则不可以。</p>\n<p>视图的更新性和视图中查询的定义有关，以下类型的视图是不能更新的：</p>\n<ul>\n<li>包含以下关键字的SQL语句：分组函数、distinct、group by、having、union或者union all</li>\n<li>常量视图</li>\n<li>select 中包含子查询</li>\n<li>join</li>\n<li>from 一个不能更新的视图</li>\n<li>where 子句的子查询引用了 from 子句中的表</li>\n</ul>\n<h4 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">or</span> <span class=\"token keyword\">replace</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">algorithm</span> <span class=\"token operator\">=</span> &#123;<span class=\"token keyword\">UNDEFINED</span><span class=\"token operator\">|</span>MEGRE<span class=\"token operator\">|</span><span class=\"token keyword\">TEMPTABLE</span>&#125;<span class=\"token punctuation\">]</span> <span class=\"token keyword\">view</span> 视图名 <span class=\"token keyword\">as</span> 查询语句 <span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">CASCADED</span><span class=\"token operator\">|</span><span class=\"token keyword\">LOCAL</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">CHECK</span> OPTION1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># LOCAL:只要满足本视图的条件就可以更新</span>\n<span class=\"token comment\"># CASCADED:必须满足所有针对该视图的所有视图的条件才可以更新，默认</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">view</span> 视图名 <span class=\"token keyword\">as</span> 查询语句<span class=\"token operator\">/</span>视图<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">view</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span><span class=\"token punctuation\">]</span> 视图名<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>视图名<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 查看指定数据库下所有视图</span>\n<span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">FULL</span> <span class=\"token keyword\">TABLES</span> <span class=\"token operator\">IN</span> databaseName <span class=\"token keyword\">WHERE</span> TABLE_TYPE <span class=\"token operator\">LIKE</span> <span class=\"token string\">'VIEW'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">STATUS</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"15-34道作业题\"><a href=\"#15-34道作业题\" class=\"headerlink\" title=\"15. 34道作业题\"></a>15. 34道作业题</h3><ol>\n<li>取得每个部门最高最高薪水的人员名称</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">#1</span>\n<span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\tt<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> \n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> deptno<span class=\"token punctuation\">,</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> maxsal <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno <span class=\"token punctuation\">)</span> t <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>maxsal \n\t<span class=\"token operator\">AND</span> t<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>deptno\n\n\n<span class=\"token comment\">#2</span>\n<span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\te<span class=\"token punctuation\">.</span>sal<span class=\"token punctuation\">,</span>\n\te<span class=\"token punctuation\">.</span>deptno \n<span class=\"token keyword\">FROM</span>\n\temp e \n<span class=\"token keyword\">WHERE</span>\n\t<span class=\"token punctuation\">(</span> e<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token punctuation\">)</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> deptno<span class=\"token punctuation\">,</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> sal  <span class=\"token keyword\">FROM</span> emp  <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>哪些人的薪水在部门的平均薪水之上</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\te<span class=\"token punctuation\">.</span>sal<span class=\"token punctuation\">,</span>\n\tt<span class=\"token punctuation\">.</span>avgsal\n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> deptno<span class=\"token punctuation\">,</span> <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> avgsal <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno <span class=\"token punctuation\">)</span> t <span class=\"token keyword\">ON</span> t<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>deptno \n\t<span class=\"token operator\">AND</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>avgsal<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>取得部门中所有人的平均薪水等级</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> salgrade s <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">BETWEEN</span> s<span class=\"token punctuation\">.</span>losal <span class=\"token operator\">AND</span> s<span class=\"token punctuation\">.</span>hisal\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\te<span class=\"token punctuation\">.</span>deptno\n\t\n\n<span class=\"token comment\"># 所有部门平均薪资的薪水等级</span>\n<span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>grade\n<span class=\"token keyword\">FROM</span>\n\tsalgrade s\n\t<span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> deptno<span class=\"token punctuation\">,</span> <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> avgsal <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno <span class=\"token punctuation\">)</span> e <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>avgsal <span class=\"token operator\">BETWEEN</span> s<span class=\"token punctuation\">.</span>losal \n\t<span class=\"token operator\">AND</span> s<span class=\"token punctuation\">.</span>hisal<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>不准用（max），取得最高薪水</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>sal <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> sal <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># or</span>\n<span class=\"token keyword\">SELECT</span>\n\tsal \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">WHERE</span>\n\tsal <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> a<span class=\"token punctuation\">.</span>sal <span class=\"token keyword\">FROM</span> emp a <span class=\"token keyword\">JOIN</span> emp b <span class=\"token keyword\">ON</span> a<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>sal <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>取得平均薪水最高的部门的部门编号</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tdeptno<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> avgsal \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\tdeptno \n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n\tavgsal <span class=\"token keyword\">DESC</span> \n\t<span class=\"token keyword\">LIMIT</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"6\">\n<li>取得平均薪水最高的部门名称</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\td<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token punctuation\">)</span> avgsal \n<span class=\"token keyword\">FROM</span>\n\tdept d\n\t<span class=\"token keyword\">JOIN</span> emp e <span class=\"token keyword\">ON</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>deptno \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\td<span class=\"token punctuation\">.</span>dname\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n\tavgsal <span class=\"token keyword\">DESC</span> \n\t<span class=\"token keyword\">LIMIT</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"7\">\n<li>求平均薪水的等级最低的部门的部门名称</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\td<span class=\"token punctuation\">.</span>dname\n<span class=\"token keyword\">FROM</span>\n\tdept d\n\t<span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> deptno<span class=\"token punctuation\">,</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> sumsal <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> sumsal <span class=\"token keyword\">ASC</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> t <span class=\"token keyword\">ON</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"8\">\n<li>取得比普通员工（员工代码没有在 mgr 字段上出现的）的最高薪水还要高的领导人姓名</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tename<span class=\"token punctuation\">,</span>\n\tsal \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">WHERE</span>\n\tsal <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">SELECT</span>\n\t\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> \n\t<span class=\"token keyword\">FROM</span>\n\t\temp \n<span class=\"token keyword\">WHERE</span>\n\tempno <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> mgr <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">WHERE</span> mgr <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"9\">\n<li>取得薪水最高的前五名员工</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>sal <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> sal <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"10\">\n<li>取得薪水最高的第六到第十名员工</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>sal <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> sal <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"11\">\n<li>取得最后入职的5名员工</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>hiredate <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> hiredate <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"12\">\n<li>取得每个薪水等级有多少员工</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\ts<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> salgrade s <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">BETWEEN</span> s<span class=\"token punctuation\">.</span>LOSAL <span class=\"token operator\">AND</span> s<span class=\"token punctuation\">.</span>HISAL \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\ts<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"13\">\n<li>有三个表S（学生表）、C（课程表）、SC（学生选课表）<br>S（SNO，SNAME）– 代表（学号，姓名）<br>C（CNO，CNAME，CTEACHER）– 代表（课程号，课程名，教师名）<br>SC（SNO，CNO，SCGRADE）– 代表（学号，课程号，成绩）</li>\n</ol>\n<p>问题：</p>\n<ul>\n<li>找出没选过”黎明“老师的所有学生姓名；</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tsname s \n<span class=\"token keyword\">WHERE</span>\n\tsno <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> sno <span class=\"token keyword\">FROM</span>  sc <span class=\"token keyword\">WHERE</span> cno <span class=\"token operator\">IN</span> \n              <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> cno <span class=\"token keyword\">FROM</span> c <span class=\"token keyword\">WHERE</span> cteacher <span class=\"token operator\">=</span> <span class=\"token string\">'黎明'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>找出两门及以上不及格学生姓名及平均成绩；</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span>\n  t1<span class=\"token punctuation\">.</span>sno<span class=\"token punctuation\">,</span>t1<span class=\"token punctuation\">.</span>sname<span class=\"token punctuation\">,</span>t2<span class=\"token punctuation\">.</span>avggrade\n<span class=\"token keyword\">from</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span>\n    sc<span class=\"token punctuation\">.</span>sno<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>sname\n  <span class=\"token keyword\">from</span>\n    SC sc\n  <span class=\"token keyword\">join</span>\n    S s\n  <span class=\"token keyword\">on</span>\n    sc<span class=\"token punctuation\">.</span>sno<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span>sno\n  <span class=\"token keyword\">where</span>\n    sc<span class=\"token punctuation\">.</span>scgrade <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span>\n  <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span>\n      sc<span class=\"token punctuation\">.</span>sno<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>sname\n  <span class=\"token keyword\">having</span>\n    <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> t1\n<span class=\"token keyword\">join</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> sno<span class=\"token punctuation\">,</span><span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>scgrade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> avggrade <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> sno<span class=\"token punctuation\">)</span> t2\n<span class=\"token keyword\">on</span>\n  t1<span class=\"token punctuation\">.</span>sno<span class=\"token operator\">=</span>t2<span class=\"token punctuation\">.</span>sno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>既学过1号课程又学过2号课程的所有学生的姓名。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\ts<span class=\"token punctuation\">.</span>sno<span class=\"token punctuation\">,</span>\n\ts<span class=\"token punctuation\">.</span>sname \n<span class=\"token keyword\">FROM</span>\n\tsc\n\t<span class=\"token keyword\">JOIN</span> s <span class=\"token keyword\">ON</span> sc<span class=\"token punctuation\">.</span>sno <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>sno \n<span class=\"token keyword\">WHERE</span>\n\tcno <span class=\"token operator\">=</span> <span class=\"token number\">1</span> \n\t<span class=\"token operator\">AND</span> sno <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">SELECT</span>\n      sno \n    <span class=\"token keyword\">FROM</span>\n      sc \n  \t<span class=\"token keyword\">WHERE</span>\n   \t \tcno <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ol start=\"14\">\n<li>列出所有员工及领导的姓名</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\ta<span class=\"token punctuation\">.</span>ename <span class=\"token string\">'员工'</span><span class=\"token punctuation\">,</span>\n\tb<span class=\"token punctuation\">.</span>ename <span class=\"token string\">\"领导\"</span> \n<span class=\"token keyword\">FROM</span>\n\temp a\n\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> emp b <span class=\"token keyword\">ON</span> a<span class=\"token punctuation\">.</span>mgr <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>empno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"15\">\n<li>列出雇佣日期早于其直接上级的所有员工的编号、姓名、部门名称</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\ta<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">,</span>\n\ta<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>dname \n<span class=\"token keyword\">FROM</span>\n\temp a\n\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> emp b <span class=\"token keyword\">ON</span> a<span class=\"token punctuation\">.</span>mgr <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>empno\n\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> dept d <span class=\"token keyword\">ON</span> a<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>deptno \n<span class=\"token keyword\">WHERE</span>\n\ta<span class=\"token punctuation\">.</span>hiredate <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>hiredate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"16\">\n<li>列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\td<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\te<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> \n<span class=\"token keyword\">FROM</span>\n\tdept d\n\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> emp e <span class=\"token keyword\">ON</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>deptno<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"17\">\n<li>列出至少有5个员工的所有部门</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> deptno <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> deptno <span class=\"token keyword\">having</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"18\">\n<li>列出比”SMIT”工资高的员工信息</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\t<span class=\"token operator\">*</span> \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">WHERE</span>\n\tsal <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> sal <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">WHERE</span> ename <span class=\"token operator\">=</span> <span class=\"token string\">\"SMITH\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"19\">\n<li>列出所有JOB为“CLERK”的员工姓名及其部门名称，部门人数</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\ta<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\ta<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\tb<span class=\"token punctuation\">.</span>deptcount \n<span class=\"token keyword\">FROM</span>\n\t<span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> e<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token keyword\">FROM</span> emp e <span class=\"token keyword\">JOIN</span> dept d <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token keyword\">WHERE</span> job <span class=\"token operator\">=</span> <span class=\"token string\">\"CLERK\"</span> <span class=\"token punctuation\">)</span> a\n\t<span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> deptno<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> deptcount <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno <span class=\"token punctuation\">)</span> b <span class=\"token keyword\">ON</span> a<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"20\">\n<li>列出最低薪金大于1500的各种工作及从事此工作的全部雇员人数，按照工作岗位分组求最小值</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> job<span class=\"token punctuation\">,</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> job <span class=\"token keyword\">having</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>sal<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1500</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"21\">\n<li>列出部门“SALES”工作的员工姓名，假定不知道销售部的部门编号</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tename\n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">WHERE</span>\n\tdeptno <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> deptno <span class=\"token keyword\">FROM</span> dept <span class=\"token keyword\">WHERE</span> dname <span class=\"token operator\">=</span> <span class=\"token string\">\"SALES\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"22\">\n<li>列出薪金高于公司平均薪金的所有员工、所在部门、上级领导、雇员的工资等级</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\tee<span class=\"token punctuation\">.</span>ename manager<span class=\"token punctuation\">,</span>\n\ts<span class=\"token punctuation\">.</span>grade \n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> emp ee <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>mgr <span class=\"token operator\">=</span> ee<span class=\"token punctuation\">.</span>empno\n\t<span class=\"token keyword\">JOIN</span> dept d <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>deptno\n\t<span class=\"token keyword\">JOIN</span> salgrade s <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">BETWEEN</span> s<span class=\"token punctuation\">.</span>LOSAL \n\t<span class=\"token operator\">AND</span> s<span class=\"token punctuation\">.</span>HISAL \n<span class=\"token keyword\">WHERE</span>\n\te<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span>  <span class=\"token keyword\">FROM</span> emp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"23\">\n<li>列出与“SCOTT”从事相同工作的所有员工及部门名称</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tename<span class=\"token punctuation\">,</span>\n\tdname \n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> dept d <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>deptno \n<span class=\"token keyword\">WHERE</span>\n\tjob <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> job <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">WHERE</span> ename <span class=\"token operator\">=</span> <span class=\"token string\">\"SCOTT\"</span> <span class=\"token punctuation\">)</span> \n\t<span class=\"token operator\">AND</span> ename <span class=\"token operator\">!=</span> <span class=\"token string\">\"SCOTT\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"24\">\n<li>列出薪金等于部门30中员工的薪金的其他员工的姓名和薪金</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tename<span class=\"token punctuation\">,</span>\n\tsal \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">WHERE</span>\n\tsal <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> sal <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">WHERE</span> deptno <span class=\"token operator\">=</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">)</span> \n\t<span class=\"token operator\">AND</span> deptno <span class=\"token operator\">!=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>25.列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金、部门名称</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\te<span class=\"token punctuation\">.</span>sal<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>dname \n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> dept d <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>deptno \n<span class=\"token keyword\">WHERE</span>\n\te<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">WHERE</span> deptno <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"26\">\n<li>列出每个部门工作的员工数量，平均工资和平均服务期限</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\td<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span> e<span class=\"token punctuation\">.</span>ename <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tifnull<span class=\"token punctuation\">(</span> <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>\n\t\ttimestampdiff<span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span>\n\t\t\thiredate<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span>\n\tdept d\n\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> emp e <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>DEPTNO <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>DEPTNO \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\td<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"27\">\n<li>列出员工的姓名、部门名称和工资</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\te<span class=\"token punctuation\">.</span>sal \n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> dept d <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>DEPTNO <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>DEPTNO<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"28\">\n<li>列出所有部门的详细信息和人数</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\td<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span> e<span class=\"token punctuation\">.</span>ename <span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span>\n\tdept d\n\t<span class=\"token keyword\">JOIN</span> emp e <span class=\"token keyword\">ON</span> d<span class=\"token punctuation\">.</span>DEPTNO <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>DEPTNO \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\td<span class=\"token punctuation\">.</span>DEPTNO<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>DNAME<span class=\"token punctuation\">,</span>\n\td<span class=\"token punctuation\">.</span>LOC<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"29\">\n<li>列出各种工作的最低工资及从事此工作的雇员姓名</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\tt<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> \n<span class=\"token keyword\">FROM</span>\n\temp e\n\t<span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">SELECT</span> job<span class=\"token punctuation\">,</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> minsal <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> job <span class=\"token punctuation\">)</span> t <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>minsal \n\t<span class=\"token operator\">AND</span> e<span class=\"token punctuation\">.</span>job <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>job<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"30\">\n<li>列出各个部门的MANGER（领导）的最低薪金</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tdeptno<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">min</span><span class=\"token punctuation\">(</span> sal <span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">WHERE</span>\n\tjob <span class=\"token operator\">=</span> <span class=\"token string\">\"MANAGER\"</span> \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\tdeptno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"31\">\n<li>列出所有员工的年工资，按年薪从低到高排序</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tifnull<span class=\"token punctuation\">(</span> sal<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> <span class=\"token number\">12</span> \n<span class=\"token keyword\">FROM</span>\n\temp \n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n\tsal <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"32\">\n<li>求出员工领导的薪水超过3000的员工名字与领导名字</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\ta<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>\n\tb<span class=\"token punctuation\">.</span>ename manager<span class=\"token punctuation\">,</span>\n\tb<span class=\"token punctuation\">.</span>sal \n<span class=\"token keyword\">FROM</span>\n\temp a\n\t<span class=\"token keyword\">JOIN</span> emp b <span class=\"token keyword\">ON</span> a<span class=\"token punctuation\">.</span>mgr <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>empno \n<span class=\"token keyword\">WHERE</span>\n\tb<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">></span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"33\">\n<li>求出部门名称中，带’S’字符的部门员工的工资合计、部门人数</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\td<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span> e<span class=\"token punctuation\">.</span>ename <span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span>\n\tdept d\n\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> emp e <span class=\"token keyword\">ON</span> e<span class=\"token punctuation\">.</span>DEPTNO <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>DEPTNO \n<span class=\"token keyword\">WHERE</span>\n\td<span class=\"token punctuation\">.</span>dname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'%S%'</span> \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n\td<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"34\">\n<li>给任职日期超过30年的员工加薪10%</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> emp \n<span class=\"token keyword\">SET</span> sal <span class=\"token operator\">=</span> sal <span class=\"token operator\">*</span> <span class=\"token number\">1.1</span> \n<span class=\"token keyword\">WHERE</span>\n\tTIMESTAMPDIFF<span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span>\n\tHIREDATE<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token number\">30</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"16-变量\"><a href=\"#16-变量\" class=\"headerlink\" title=\"16.变量\"></a>16.变量</h3><h4 id=\"系统变量\"><a href=\"#系统变量\" class=\"headerlink\" title=\"系统变量\"></a>系统变量</h4><p>由系统提供，服务器层面，只要服务器不重启，就会一直有效。有以下两种</p>\n<ul>\n<li>全局变量</li>\n<li>会话变量（将下面的 ‘global’ 换成 ‘session’ 即为会话变量操作）</li>\n</ul>\n<ol>\n<li>查看所有的系统变量：<code>show global variables</code></li>\n<li>查看满足条件的部分系统变量：<code>show global variables like &#39;%xx%&#39;</code></li>\n<li>查看指定的某个系统变量的值：<code>select @@global.系统变量名</code><ul>\n<li><code>select @@global.autocommit</code>   </li>\n<li><code>select @@[session.]transaction_isolation</code> （不写默认显示局部变量）</li>\n</ul>\n</li>\n<li>为某个具体的系统变量赋值<ul>\n<li><code>set global 系统变量名 = 值</code> or  <code>set @@gloabl.系统变量名 = 值</code><ul>\n<li><code>set global autocommit = 0</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"自定义变量\"><a href=\"#自定义变量\" class=\"headerlink\" title=\"自定义变量\"></a>自定义变量</h4><p>用户自定义，作用域为当前会话（连接）有效，同于会话变量的作用域</p>\n<h5 id=\"自定义变量-用户变量\"><a href=\"#自定义变量-用户变量\" class=\"headerlink\" title=\"自定义变量 - 用户变量\"></a>自定义变量 - 用户变量</h5><p><strong>用户变量 - 定义</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 三种方式</span>\n<span class=\"token keyword\">set</span> @用户变量名 <span class=\"token operator\">=</span> 值\n<span class=\"token keyword\">set</span> @用户变量名 :<span class=\"token operator\">=</span> 值\n<span class=\"token keyword\">select</span> @用户变量名 :<span class=\"token operator\">=</span> 值<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>用户变量 - 赋值</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 四种方式</span>\n<span class=\"token keyword\">set</span> @用户变量名 <span class=\"token operator\">=</span> 值\n<span class=\"token keyword\">set</span> @用户变量名 :<span class=\"token operator\">=</span> 值\n<span class=\"token keyword\">select</span> @用户变量名 :<span class=\"token operator\">=</span> 值\n<span class=\"token keyword\">select</span> 端字段 <span class=\"token keyword\">into</span> @用户变量名 <span class=\"token keyword\">from</span> 表<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"自定义变量-局部变量\"><a href=\"#自定义变量-局部变量\" class=\"headerlink\" title=\"自定义变量 - 局部变量\"></a>自定义变量 - 局部变量</h5><p>作用域：仅仅在定义它的 begin end 中有效，并且必须放在行首</p>\n<p><strong>局部变量 - 定义</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">declare</span> 变量名 类型 <span class=\"token punctuation\">[</span><span class=\"token keyword\">default</span> 值<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>局部变量 - 赋值</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">set</span> 局部变量名 <span class=\"token operator\">=</span> 值<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">set</span> 局部变量名 :<span class=\"token operator\">=</span> 值\n<span class=\"token keyword\">select</span> @局部变量名 :<span class=\"token operator\">=</span> 值\n<span class=\"token keyword\">select</span> 字段 <span class=\"token keyword\">into</span> 局部变量名 <span class=\"token keyword\">from</span> 表<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"17-存储过程和函数\"><a href=\"#17-存储过程和函数\" class=\"headerlink\" title=\"17.存储过程和函数\"></a>17.存储过程和函数</h3><h4 id=\"存储过程-procedure\"><a href=\"#存储过程-procedure\" class=\"headerlink\" title=\"存储过程 procedure\"></a>存储过程 procedure</h4><h5 id=\"创建-1\"><a href=\"#创建-1\" class=\"headerlink\" title=\"创建\"></a>创建</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">delimiter</span> 变量<span class=\"token number\">1</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">procedure</span> 存储过程名<span class=\"token punctuation\">(</span>参数列表<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">begin</span>\n\t\t存储过程体（一组合法<span class=\"token keyword\">SQL</span>语句） \n<span class=\"token keyword\">end</span> 变量<span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 参数列表包括三部分：参数模式(in/out/inout) 参数名 参数类型</span>\n<span class=\"token comment\"># in：该参数可以作为输入，也就是该参数需要调用方法传入值</span>\n<span class=\"token comment\"># out：该参数可以作为输出，也就是该参数可以作为返回值</span>\n<span class=\"token comment\"># inout：该参数是以上两种的合体</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h5><p><code>call 存储过程名(参数列表);</code></p>\n<img src=\"http://markdown-pic-june.oss-cn-beijing.aliyuncs.com/uPic/image-20211105205914183.png\" alt=\"image-20211105205914183\" style=\"zoom:50%;\" />\n\n<h5 id=\"删除-1\"><a href=\"#删除-1\" class=\"headerlink\" title=\"删除\"></a>删除</h5><p><code>drop procedure [if exists] 存储过程名</code></p>\n<h5 id=\"查看-1\"><a href=\"#查看-1\" class=\"headerlink\" title=\"查看\"></a>查看</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">procedure</span> 存储过程名\n<span class=\"token keyword\">show</span> <span class=\"token keyword\">procedure</span> <span class=\"token keyword\">status</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h4 id=\"函数-function\"><a href=\"#函数-function\" class=\"headerlink\" title=\"函数 function\"></a>函数 function</h4><h5 id=\"创建语法\"><a href=\"#创建语法\" class=\"headerlink\" title=\"创建语法\"></a>创建语法</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">FUNCTION</span> 函数名<span class=\"token punctuation\">(</span>参数列表<span class=\"token punctuation\">)</span> <span class=\"token keyword\">RETURNS</span> 返回类型\n<span class=\"token keyword\">BEGIN</span>\n\t函数体\n<span class=\"token keyword\">END</span>\n<span class=\"token comment\"># 参数列表包含两部分：参数名 参数类型</span>\n<span class=\"token comment\"># 函数一定有返回语句 RETURN V</span>\n<span class=\"token comment\"># 注意：函数不允许产生查询结果！</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"查看-2\"><a href=\"#查看-2\" class=\"headerlink\" title=\"查看\"></a>查看</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">function</span> 函数名（不带括号）<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h5 id=\"删除-2\"><a href=\"#删除-2\" class=\"headerlink\" title=\"删除\"></a>删除</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span>  <span class=\"token keyword\">function</span> 函数名（不带括号）<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n\n\n<h4 id=\"函数-vs-存储过程\"><a href=\"#函数-vs-存储过程\" class=\"headerlink\" title=\"函数 vs 存储过程\"></a>函数 vs 存储过程</h4><p>存储过程是procedure用户定义的一系列sql语句的集合，涉及特定表或其它对象的任务，用户可以调用存储过程，而函数通常是数据库已定义的方法，它接收参数并返回某种类型的值并且不涉及特定用户表。</p>\n<h3 id=\"18-流程控制结构\"><a href=\"#18-流程控制结构\" class=\"headerlink\" title=\"18.流程控制结构\"></a>18.流程控制结构</h3><h4 id=\"分支结构\"><a href=\"#分支结构\" class=\"headerlink\" title=\"分支结构\"></a>分支结构</h4><ol>\n<li>if 函数 &amp; 结构</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 函数 if</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>表达式a<span class=\"token punctuation\">,</span>结果b<span class=\"token punctuation\">,</span>结果c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 结构 if</span>\n<span class=\"token keyword\">if</span> 条件<span class=\"token number\">1</span> <span class=\"token keyword\">then</span> 语句<span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> 条件<span class=\"token number\">2</span> <span class=\"token keyword\">then</span> 语句<span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">else</span> 语句n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">end</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>case 结构</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CASE</span> <span class=\"token punctuation\">[</span>变量<span class=\"token operator\">/</span>表达式<span class=\"token operator\">/</span>字段<span class=\"token punctuation\">]</span> \t<span class=\"token comment\"># 类似Java switch/if-else</span>\n<span class=\"token keyword\">WHEN</span> 要判断的值 <span class=\"token keyword\">THEN</span> 返回的值<span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">WHEN</span> 要判断的值 <span class=\"token keyword\">THEN</span> 返回的值<span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">WHEN</span> 要判断的值 <span class=\"token keyword\">THEN</span> 返回的值<span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">ELSE</span> 要返回的值 n<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> <span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>例子：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 1.统计每个班的男生和女生各是多少，统计结果的表头为：班号、男生数量、女生数量</span>\n<span class=\"token keyword\">SELECT</span> 班号<span class=\"token punctuation\">,</span>\n<span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> 性别<span class=\"token operator\">=</span><span class=\"token string\">'男'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'男'</span> <span class=\"token keyword\">END</span><span class=\"token punctuation\">)</span> 男生数<span class=\"token punctuation\">,</span>\n<span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> 性别<span class=\"token operator\">=</span><span class=\"token string\">'女'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'女'</span> <span class=\"token keyword\">END</span><span class=\"token punctuation\">)</span> 女生数\n<span class=\"token keyword\">FROM</span> 学生表 <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> 班号\n\n<span class=\"token comment\"># 2.判断成绩的等级，85-100为“优”，70-84为“良”，60-69为“及格”，60以下为“不及格”，并统计每一等级的人数。</span>\n<span class=\"token keyword\">SELECT</span>\n<span class=\"token keyword\">CASE</span>\n<span class=\"token keyword\">WHEN</span> GRADE <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">85</span> <span class=\"token operator\">AND</span> <span class=\"token number\">100</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'优'</span>\n<span class=\"token keyword\">WHEN</span> GRADE <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">70</span> <span class=\"token operator\">AND</span> <span class=\"token number\">84</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'良'</span>\n<span class=\"token keyword\">WHEN</span> GRADE <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">60</span> <span class=\"token operator\">AND</span> <span class=\"token number\">69</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'及格'</span>\n<span class=\"token keyword\">ELSE</span> <span class=\"token string\">'不及格'</span>\n<span class=\"token keyword\">END</span> 等级<span class=\"token punctuation\">,</span>     <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> 人数\n<span class=\"token keyword\">FROM</span> SC\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n<span class=\"token keyword\">CASE</span>\n<span class=\"token keyword\">WHEN</span> GRADE <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">85</span> <span class=\"token operator\">AND</span> <span class=\"token number\">100</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'优'</span>\n<span class=\"token keyword\">WHEN</span> GRADE <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">70</span> <span class=\"token operator\">AND</span> <span class=\"token number\">84</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'良'</span>\n<span class=\"token keyword\">WHEN</span> GRADE <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">60</span> <span class=\"token operator\">AND</span> <span class=\"token number\">69</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'及格'</span>\n<span class=\"token keyword\">ELSE</span> <span class=\"token string\">'不及格'</span>\n<span class=\"token keyword\">END</span>\n\n<span class=\"token comment\"># 3.现在运营想要将用户划分为25岁以下和25岁及以上两个年龄段，分别查看这两个年龄段用户数量</span>\n<span class=\"token keyword\">SELECT</span>\n<span class=\"token keyword\">CASE</span> \n<span class=\"token keyword\">WHEN</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">25</span> <span class=\"token operator\">OR</span> age <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'25岁以下'</span> \n<span class=\"token keyword\">WHEN</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">25</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'25岁及以上'</span>\n<span class=\"token keyword\">END</span> age_cut<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> number\n<span class=\"token keyword\">FROM</span> user_profile\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> age_cut<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"循环结构\"><a href=\"#循环结构\" class=\"headerlink\" title=\"循环结构\"></a>循环结构</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 1.while</span>\n<span class=\"token punctuation\">[</span>标签:<span class=\"token punctuation\">]</span><span class=\"token keyword\">while</span> 循环条件 <span class=\"token keyword\">do</span>\n\t循环体<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">end</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span>标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 标签可以搭配循环控制使用：iterate(continue)/leave(break)</span>\n\n<span class=\"token comment\"># 2.loop  死循环</span>\n<span class=\"token punctuation\">[</span>标签:<span class=\"token punctuation\">]</span><span class=\"token keyword\">loop</span>\n\t循环体<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">end</span> <span class=\"token keyword\">loop</span> <span class=\"token punctuation\">[</span>标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 3.repeat(do-while)</span>\n<span class=\"token punctuation\">[</span>标签:<span class=\"token punctuation\">]</span> <span class=\"token keyword\">repeat</span>\n\t循环体<span class=\"token punctuation\">;</span>\nuntil 结束循环的条件\n<span class=\"token keyword\">end</span> <span class=\"token keyword\">repeat</span> <span class=\"token punctuation\">[</span>标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h5 id=\"游标（光标）\"><a href=\"#游标（光标）\" class=\"headerlink\" title=\"游标（光标）\"></a>游标（光标）</h5><h6 id=\"1-声明\"><a href=\"#1-声明\" class=\"headerlink\" title=\"1.声明\"></a>1.声明</h6><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">declare</span> 游标名 <span class=\"token keyword\">cursor</span> <span class=\"token keyword\">for</span> 查询语句 <span class=\"token comment\"># MySQL SQL Server DB2</span>\n<span class=\"token keyword\">declare</span> 有标明 <span class=\"token keyword\">cursor</span> <span class=\"token operator\">is</span> 查询语句  <span class=\"token comment\"># Oracle PostgreSQL</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h6 id=\"2-OPEN\"><a href=\"#2-OPEN\" class=\"headerlink\" title=\"2.OPEN\"></a>2.OPEN</h6><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">open</span> 游标名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"3-FETCH\"><a href=\"#3-FETCH\" class=\"headerlink\" title=\"3.FETCH\"></a>3.FETCH</h6><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">fetch</span> 游标名 <span class=\"token keyword\">into</span> 变量<span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"4-CLOSE\"><a href=\"#4-CLOSE\" class=\"headerlink\" title=\"4.CLOSE\"></a>4.CLOSE</h6><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">close</span> 游标名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<img src=\"http://markdown-pic-june.oss-cn-beijing.aliyuncs.com/uPic/image-20211109103426864.png\" alt=\"image-20211109103426864\" style=\"zoom: 50%;\" />\n\n\n\n<h3 id=\"19-窗口函数\"><a href=\"#19-窗口函数\" class=\"headerlink\" title=\"19.窗口函数\"></a>19.窗口函数</h3><p>基本语法如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token operator\">&lt;</span>窗口函数<span class=\"token operator\">></span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> <span class=\"token operator\">&lt;</span>用于分组的列名<span class=\"token operator\">></span>\n                <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token operator\">&lt;</span>用于排序的列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># partition子句可是省略，省略就是不指定分组</span>\n<span class=\"token comment\"># 这就失去了窗口函数的功能，所以一般不要这么使用</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"专用窗口函数-rank\"><a href=\"#专用窗口函数-rank\" class=\"headerlink\" title=\"专用窗口函数 rank\"></a>专用窗口函数 <strong>rank</strong></h4><img src=\"http://markdown-pic-june.oss-cn-beijing.aliyuncs.com/uPic/image-20211107213152037.png\" alt=\"image-20211107213152037\" style=\"zoom: 25%;\" />\n\n<img src=\"http://markdown-pic-june.oss-cn-beijing.aliyuncs.com/uPic/image-20211107213207638.png\" alt=\"image-20211107213207638\" style=\"zoom:25%;\" />\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n   rank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> 班级 <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 成绩 <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ranking\n<span class=\"token keyword\">from</span> 班级表<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>rank &amp; dense_rank &amp; row_number 有什么区别？</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n   rank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 成绩 <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ranking<span class=\"token punctuation\">,</span>\n   dense_rank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 成绩 <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dese_rank<span class=\"token punctuation\">,</span>\n   row_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 成绩 <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> row_num\n<span class=\"token keyword\">from</span> 班级表<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<img src=\"http://markdown-pic-june.oss-cn-beijing.aliyuncs.com/uPic/image-20211107213555067.png\" alt=\"image-20211107213555067\" style=\"zoom:25%;\" />\n\n\n\n<h4 id=\"聚合函数作为窗口函数\"><a href=\"#聚合函数作为窗口函数\" class=\"headerlink\" title=\"聚合函数作为窗口函数\"></a>聚合函数作为窗口函数</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n   <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>成绩<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 学号<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> current_sum<span class=\"token punctuation\">,</span>\n   <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>成绩<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 学号<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> current_avg<span class=\"token punctuation\">,</span>\n   <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>成绩<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 学号<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> current_count<span class=\"token punctuation\">,</span>\n   <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>成绩<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 学号<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> current_max<span class=\"token punctuation\">,</span>\n   <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>成绩<span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 学号<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> current_min\n<span class=\"token keyword\">from</span> 班级表<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<img src=\"http://markdown-pic-june.oss-cn-beijing.aliyuncs.com/uPic/image-20211107213844981.png\" alt=\"image-20211107213844981\" style=\"zoom: 33%;\" />\n\n<p>如上图，聚合函数sum在窗口函数中，是对自身记录、及位于自身记录以上的数据进行求和的结果。比如0004号，在使用sum窗口函数后的结果，是对0001，0002，0003，0004号的成绩求和，若是0005号，则结果是0001号~0005号成绩的求和，以此类推。</p>\n<p>不仅是sum求和，平均、计数、最大最小值，也是同理，都是针对自身记录、以及自身记录之上的所有数据进行计算</p>\n<h3 id=\"20-关于自增\"><a href=\"#20-关于自增\" class=\"headerlink\" title=\"20.关于自增\"></a>20.关于自增</h3><ol>\n<li>自增列必须是键，但不一定非是主键。</li>\n<li>一张表只能有一个自增列</li>\n</ol>\n<h4 id=\"自增主键利弊\"><a href=\"#自增主键利弊\" class=\"headerlink\" title=\"自增主键利弊\"></a>自增主键利弊</h4><p><strong>优点</strong></p>\n<ul>\n<li>自增主键执行insert效率高，数据按顺序存储</li>\n<li>占空间小，所有二级索引都含有主键并使用主键进行记录查找</li>\n<li>物理存储要求表必须有主键，自增int主键开销小，使用便捷</li>\n</ul>\n<p><strong>缺点</strong></p>\n<ul>\n<li>高并发场景自增Id的生成影响系统性能</li>\n<li>该值与业务无关，除了唯一标识一条记录并无太多意义（未必是缺点，正因为没有确定意义，业务变化时不会影响自增主键，从而不影响底层存储顺序）</li>\n</ul>\n<p><a href=\"https://dev.mysql.com/doc/refman/5.7/en/glossary.html#glos_auto_increment_locking\">MySQL :: MySQL 5.7 Reference Manual :: MySQL Glossary</a></p>\n<h4 id=\"使用UUID为主键？\"><a href=\"#使用UUID为主键？\" class=\"headerlink\" title=\"使用UUID为主键？\"></a>使用UUID为主键？</h4><p><strong>优点</strong></p>\n<ul>\n<li>UUID便于分布式数据库<strong>并发插入</strong></li>\n<li>业务逻辑不依赖于Id生成，如业务需要通过Id关联多条记录，在自增Id条件下记录必须先行插入之后才能获取Id再行关联。UUID可以线下生成Id并直接关联，不依赖于数据库</li>\n</ul>\n<p><strong>缺点</strong></p>\n<ul>\n<li>相对自增主键，使得所有二级索引占据更多空间</li>\n<li>数据插入效率较低，新插数据可能在索引的中间位置，为将数据插入合适的位置可能需要额外的IO操作，同时造成<strong>索引不连续，影响查询效率</strong></li>\n</ul>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>业务逻辑中含有自然唯一键值时（如accountId），可以考虑下accountId本身的属性，如果它本身就是个int型，那么就可以直接用来作为主键，如果它本身比较长（比如身份证号），那用来做主键可能会带来一些负面影响。此外，还要考虑使用自增主键可能会影响系统的并发度</p>\n<p>建议在建表时默认加上一列自增int主键，至于按自然键值查找的需求，增加对应的二级索引即可。</p>\n<h3 id=\"21-触发器（能不用就不用）\"><a href=\"#21-触发器（能不用就不用）\" class=\"headerlink\" title=\"21. 触发器（能不用就不用）\"></a>21. 触发器（能不用就不用）</h3><h4 id=\"创建-2\"><a href=\"#创建-2\" class=\"headerlink\" title=\"创建\"></a>创建</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">trigger</span> 触发器名称\n&#123;before<span class=\"token operator\">|</span><span class=\"token keyword\">after</span>&#125; &#123;<span class=\"token keyword\">insert</span><span class=\"token operator\">|</span><span class=\"token keyword\">update</span><span class=\"token operator\">|</span><span class=\"token keyword\">delete</span>&#125; <span class=\"token keyword\">on</span> 表名\n<span class=\"token keyword\">for each row</span>\n触发器执行语句块<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"删除-3\"><a href=\"#删除-3\" class=\"headerlink\" title=\"删除\"></a>删除</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">trigger</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span><span class=\"token punctuation\">]</span> 触发器名<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"22-数据库三范式\"><a href=\"#22-数据库三范式\" class=\"headerlink\" title=\"22. 数据库三范式\"></a>22. 数据库三范式</h3><ol>\n<li>第一范式：确保每列保持原子性</li>\n<li>第二范式：确保表中每列都与主键相关</li>\n<li>第三范式：确保每列都和主键直接相关，而不是间接相关</li>\n</ol>\n","text":"MySQL 索引结构 - rickiyang - 博客园 (cnblogs.com) MySQL基础1.基础语法 Null 相关 使用 is null，例如查询哪些员工津贴为null： select empno,ename,sal from emp where comm is n...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":8,"path":"api/tags/学习笔记.json"},{"name":"MySQL基础","slug":"MySQL基础","count":1,"path":"api/tags/MySQL基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MySQL%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">MySQL基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">1.基础语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">2.条件语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#and-%E5%92%8C-or\"><span class=\"toc-text\">and 和 or</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#in\"><span class=\"toc-text\">in</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#like%EF%BC%88%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%EF%BC%89\"><span class=\"toc-text\">like（模糊查询）</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">3.排序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%8D%95%E8%A1%8C%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">4.单行处理函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">字符串处理函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">数学函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">日期函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B6%E5%AE%83%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">其它函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E5%A4%9A%E8%A1%8C%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5.多行处理函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E5%B8%B8%E7%94%A8SQL%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\">6.常用SQL技巧</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SQL%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F\"><span class=\"toc-text\">SQL执行顺序</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">模糊查询 - 正则表达式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">7.分组查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-distinct-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">8.distinct 关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">9.连接查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%86%85%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">内连接</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AD%89%E5%80%BC%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">等值连接</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E7%AD%89%E5%80%BC%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">非等值连接</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%87%AA%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">自连接</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">外连接</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%B7%A6%E5%A4%96%E8%BF%9E%E6%8E%A5-x2F-%E5%8F%B3%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">左外连接&#x2F;右外连接</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">全外连接</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%A4%E5%8F%89%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">交叉连接</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">10.子查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%A1%8C%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">多行子查询</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#UNION\"><span class=\"toc-text\">UNION</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#EXISTS\"><span class=\"toc-text\">EXISTS</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-Limit-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">11.Limit 使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-%E8%A1%A8%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">12.表相关操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%A1%A8%EF%BC%88DDL%EF%BC%89\"><span class=\"toc-text\">创建表（DDL）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E5%88%B6%E5%BB%BA%E8%A1%A8\"><span class=\"toc-text\">复制建表</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数据类型</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%BA%A6%E6%9D%9F%EF%BC%88-%EF%BC%89\"><span class=\"toc-text\">约束（*********）</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E8%A1%A8%EF%BC%88DDL%EF%BC%89\"><span class=\"toc-text\">修改表（DDL）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4%E8%A1%A8%EF%BC%88DDL%EF%BC%89\"><span class=\"toc-text\">删除表（DDL）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%EF%BC%88DML%EF%BC%89\"><span class=\"toc-text\">插入（DML）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%EF%BC%88DML%EF%BC%89\"><span class=\"toc-text\">修改（DML）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4%EF%BC%88DML%EF%BC%89\"><span class=\"toc-text\">删除（DML）</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13-%E4%BA%8B%E5%8A%A1\"><span class=\"toc-text\">13.事务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E5%8A%A1%E5%9B%9B%E4%B8%AA%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">事务四个特性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB-amp-%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">数据库隔离级别&amp;问题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#14-%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">14.视图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">创建</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">修改</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">删除</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B\"><span class=\"toc-text\">查看</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#15-34%E9%81%93%E4%BD%9C%E4%B8%9A%E9%A2%98\"><span class=\"toc-text\">15. 34道作业题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#16-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">16.变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">系统变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">自定义变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F-%E7%94%A8%E6%88%B7%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">自定义变量 - 用户变量</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F-%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">自定义变量 - 局部变量</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#17-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">17.存储过程和函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B-procedure\"><span class=\"toc-text\">存储过程 procedure</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA-1\"><span class=\"toc-text\">创建</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">调用</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4-1\"><span class=\"toc-text\">删除</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B-1\"><span class=\"toc-text\">查看</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0-function\"><span class=\"toc-text\">函数 function</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">创建语法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B-2\"><span class=\"toc-text\">查看</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4-2\"><span class=\"toc-text\">删除</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0-vs-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">函数 vs 存储过程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#18-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">18.流程控制结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">分支结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">循环结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%B8%B8%E6%A0%87%EF%BC%88%E5%85%89%E6%A0%87%EF%BC%89\"><span class=\"toc-text\">游标（光标）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">1.声明</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#2-OPEN\"><span class=\"toc-text\">2.OPEN</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#3-FETCH\"><span class=\"toc-text\">3.FETCH</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#4-CLOSE\"><span class=\"toc-text\">4.CLOSE</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#19-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">19.窗口函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%93%E7%94%A8%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0-rank\"><span class=\"toc-text\">专用窗口函数 rank</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0%E4%BD%9C%E4%B8%BA%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">聚合函数作为窗口函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#20-%E5%85%B3%E4%BA%8E%E8%87%AA%E5%A2%9E\"><span class=\"toc-text\">20.关于自增</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE%E5%88%A9%E5%BC%8A\"><span class=\"toc-text\">自增主键利弊</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8UUID%E4%B8%BA%E4%B8%BB%E9%94%AE%EF%BC%9F\"><span class=\"toc-text\">使用UUID为主键？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#21-%E8%A7%A6%E5%8F%91%E5%99%A8%EF%BC%88%E8%83%BD%E4%B8%8D%E7%94%A8%E5%B0%B1%E4%B8%8D%E7%94%A8%EF%BC%89\"><span class=\"toc-text\">21. 触发器（能不用就不用）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA-2\"><span class=\"toc-text\">创建</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4-3\"><span class=\"toc-text\">删除</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#22-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%89%E8%8C%83%E5%BC%8F\"><span class=\"toc-text\">22. 数据库三范式</span></a></li></ol></li></ol></li></ol>","author":{"name":"JuneQQQ","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/JuneQQQ","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_46925850","juejin":"https://juejin.cn/user/3927934338357197","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/432154182"}}}},"mapped":true,"prev_post":{"title":"SpringBoot2","uid":"b4181dd5d95268a72dc772ce74f718cd","slug":"SpringBoot2","date":"2022-09-30T09:31:29.000Z","updated":"2022-09-30T09:32:29.213Z","comments":true,"path":"api/articles/SpringBoot2.json","keywords":null,"cover":[],"text":"入门案例几个注解@Cofiguration@Configuration(proxyBeanMethods=false) // Lite模式 @Configuration(proxyBeanMethods=true) // Full模式 严格保证Bean单实例，每次属性注入都要检查...","link":"","photos":[],"count_time":{"symbolsCount":"55k","symbolsTime":"50 mins."},"categories":[],"tags":[{"name":"Java框架","slug":"Java框架","count":2,"path":"api/tags/Java框架.json"}],"author":{"name":"JuneQQQ","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/JuneQQQ","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_46925850","juejin":"https://juejin.cn/user/3927934338357197","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/432154182"}}}}},"next_post":{"title":"Redis基础","uid":"b6845422ba4775a7cab0c414606e3ecd","slug":"Redis基础","date":"2022-09-30T09:26:18.000Z","updated":"2022-09-30T09:28:56.369Z","comments":true,"path":"api/articles/Redis基础.json","keywords":null,"cover":[],"text":" Linux 基础环境配置 配置gcc # 检查是否安装 gcc --version # 未安装的话 yum install centos-release-scl scl-utils-build yum install -y devtoolset-8-toolchain scl ...","link":"","photos":[],"count_time":{"symbolsCount":"33k","symbolsTime":"30 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":8,"path":"api/tags/学习笔记.json"},{"name":"Redis","slug":"Redis","count":2,"path":"api/tags/Redis.json"}],"author":{"name":"JuneQQQ","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/JuneQQQ","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_46925850","juejin":"https://juejin.cn/user/3927934338357197","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/432154182"}}}}}}